<?xml version="1.0" encoding="utf-8"?>
<mRemoteNG>
  <connection name="{{ lab_name | default('ADFR Lab') }}" type="container">

    {# ---------- Infrastructure ---------- #}
    {% if 'infrastructure' in groups %}
    <connection name="Infrastructure" type="container">
      {% for h in (groups['infrastructure'] | default([])) | sort %}
        {% set hv = hostvars[h] %}
        <connection name="{{ h }}" protocol="{{ hv.rdp_protocol | default('RDP') }}"
                    hostname="{{ hv.ansible_host | default(h) }}"
                    username="{{ hv.ansible_user | default('Administrator') }}"
                    domain="{{ hv.netbios_name | default('') }}"
                    port="{{ hv.rdp_port | default('3389') }}"/>
      {% endfor %}
    </connection>
    {% endif %}

    {# ---------- Arbor Forest ---------- #}
    {% if 'arbor_forest' in groups %}
    <connection name="Arbor Forest" type="container">
      {# Render Root Domain (arbor_forest_root_pdc + arbor_forest_root_replica) #}
      <connection name="Root Domain" type="container">
        {% for g in ['arbor_forest_root_pdc','arbor_forest_root_replica'] if g in groups %}
          {% for h in (groups[g] | default([])) | sort %}
            {% set hv = hostvars[h] %}
            <connection name="{{ h }}" protocol="{{ hv.rdp_protocol | default('RDP') }}"
                        hostname="{{ hv.ansible_host | default(h) }}"
                        username="{{ hv.ansible_user | default('Administrator') }}"
                        domain="{{ hv.netbios_name | default('') }}"
                        port="{{ hv.rdp_port | default('3389') }}"/>
          {% endfor %}
        {% endfor %}
      </connection>
    </connection>
    {% endif %}

    {# ---------- Alpine Forest with nested child domains ---------- #}
    {% if 'alpine_forest' in groups %}
    <connection name="Alpine Forest" type="container">
      {# Root Domain (alpine_forest_root_pdc + alpine_forest_root_replica) #}
      <connection name="Root Domain" type="container">
        {% for g in ['alpine_forest_root_pdc','alpine_forest_root_replica'] if g in groups %}
          {% for h in (groups[g] | default([])) | sort %}
            {% set hv = hostvars[h] %}
            <connection name="{{ h }}" protocol="{{ hv.rdp_protocol | default('RDP') }}"
                        hostname="{{ hv.ansible_host | default(h) }}"
                        username="{{ hv.ansible_user | default('Administrator') }}"
                        domain="{{ hv.netbios_name | default('') }}"
                        port="{{ hv.rdp_port | default('3389') }}"/>
          {% endfor %}
        {% endfor %}
      </connection>

      {# Collect Alpine child-domain hosts (any subgroup under alpine_forest with parent_domain set) #}
      {% set _child_items = [] %}
      {% for subgroup in (groups['alpine_forest'] | default([])) %}
        {% if subgroup in groups %}
          {% for h in groups[subgroup] | default([]) %}
            {% set hv = hostvars[h] %}
            {% if hv.parent_domain is defined %}
              {% set domlabel = (hv.netbios_name | default(hv.domain_name.split('.')[0] | default(''))) | upper %}
              {% if _child_items.append({'domain': domlabel, 'host': h}) %}{% endif %}
            {% endif %}
          {% endfor %}
        {% endif %}
      {% endfor %}

      {# Unique child domain labels (e.g., MAUNA, RAINIER) #}
      {% set child_domains = (_child_items | map(attribute='domain') | unique | list) %}

      {# Render each child domain as a container and place its hosts inside #}
      {% for dom in child_domains %}
      <connection name="{{ dom }}" type="container">
        {% for item in _child_items if item.domain == dom %}
          {% set h = item.host %}
          {% set hv = hostvars[h] %}
          <connection name="{{ h }}" protocol="{{ hv.rdp_protocol | default('RDP') }}"
                      hostname="{{ hv.ansible_host | default(h) }}"
                      username="{{ hv.ansible_user | default('Administrator') }}"
                      domain="{{ hv.netbios_name | default('') }}"
                      port="{{ hv.rdp_port | default('3389') }}"/>
        {% endfor %}
      </connection>
      {% endfor %}
    </connection>
    {% endif %}

    {# ---------- Recovery VMs ---------- #}
    {% if 'recovery_vms' in groups %}
    <connection name="Recovery VMs" type="container">
      {% for h in (groups['recovery_vms'] | default([])) | sort %}
        {% set hv = hostvars[h] %}
        <connection name="{{ h }}" protocol="{{ hv.rdp_protocol | default('RDP') }}"
                    hostname="{{ hv.ansible_host | default(h) }}"
                    username="{{ hv.ansible_user | default('Administrator') }}"
                    domain="{{ hv.netbios_name | default('') }}"
                    port="{{ hv.rdp_port | default('3389') }}"/>
      {% endfor %}
    </connection>
    {% endif %}

  </connection>
</mRemoteNG>