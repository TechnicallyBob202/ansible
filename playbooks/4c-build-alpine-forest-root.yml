---
# ==========================================
# BUILD ALPINE.LAB FOREST ROOT
# Creates the alpine.lab forest and promotes GRANITE-DC as forest root PDC
# ==========================================
# Prerequisites: 4a-pre-build-checks.yml completed
# Dependencies: None (independent forest)
# Can be run: Independently or in parallel with arbor.lab
# Idempotent: Yes - checks if domain exists before building
# ==========================================

- name: Check if alpine.lab forest already exists
  hosts: alpine_forest_root_pdc
  gather_facts: no

  vars:
    windows_password: "{{ lookup('env', 'WINDOWS_PASSWORD') }}"

  tasks:
    - name: Display build plan
      debug:
        msg:
          - "=========================================="
          - "BUILDING ALPINE.LAB FOREST ROOT"
          - "=========================================="
          - "Target: {{ inventory_hostname }} ({{ ansible_host }})"
          - "Domain: alpine.lab"
          - "NetBIOS: ALPINE"
          - "Role: Forest Root PDC"

    - name: Check if domain already exists
      ansible.windows.win_powershell:
        script: |
          try {
            $domain = Get-ADDomain -Identity "alpine.lab" -ErrorAction Stop
            Write-Output "Domain: $($domain.DNSRoot)"
            Write-Output "SID: $($domain.DomainSID.Value)"
            Write-Output "NetBIOS: $($domain.NetBIOSName)"
            Write-Output "ForestMode: $($domain.Forest)"
            exit 0
          } catch {
            Write-Output "DOMAIN_NOT_FOUND"
            exit 1
          }
      register: domain_check
      failed_when: false
      changed_when: false

    - name: Set domain status facts
      set_fact:
        alpine_domain_exists: "{{ domain_check.rc == 0 }}"
        alpine_domain_info: "{{ domain_check.stdout_lines if domain_check.rc == 0 else [] }}"
      delegate_to: localhost
      delegate_facts: yes

    - name: Display existing domain info
      debug:
        msg:
          - "Domain already exists!"
          - "{{ domain_check.stdout_lines }}"
      when: domain_check.rc == 0

    - name: Skip build if domain exists
      meta: end_host
      when: domain_check.rc == 0

- name: Build alpine.lab forest root
  hosts: alpine_forest_root_pdc
  gather_facts: no

  vars:
    windows_password: "{{ lookup('env', 'WINDOWS_PASSWORD') }}"

  tasks:
    - name: Verify we should proceed
      debug:
        msg: "Domain does not exist. Proceeding with forest build..."
      when: not hostvars['localhost']['alpine_domain_exists']

    - name: Install Active Directory Domain Services
      ansible.windows.win_feature:
        name: AD-Domain-Services
        include_management_tools: yes
        state: present
      register: adds_install
      when: not hostvars['localhost']['alpine_domain_exists']

    - name: Display installation result
      debug:
        msg: "AD-DS installed: {{ 'Success' if adds_install.changed else 'Already installed' }}"
      when: not hostvars['localhost']['alpine_domain_exists']

    - name: Promote to forest root domain controller
      microsoft.ad.domain:
        dns_domain_name: alpine.lab
        domain_netbios_name: ALPINE
        safe_mode_password: "{{ windows_password }}"
        create_dns_delegation: no
        database_path: C:\Windows\NTDS
        sysvol_path: C:\Windows\SYSVOL
        log_path: C:\Windows\NTDS
        reboot: yes
      register: domain_promotion
      when: not hostvars['localhost']['alpine_domain_exists']

    - name: Display promotion status
      debug:
        msg: "Forest promotion initiated. Server will reboot..."
      when:
        - not hostvars['localhost']['alpine_domain_exists']
        - domain_promotion.changed

- name: Wait for forest root to come online
  hosts: alpine_forest_root_pdc
  gather_facts: no

  vars:
    windows_password: "{{ lookup('env', 'WINDOWS_PASSWORD') }}"

  tasks:
    - name: Wait for DC to reboot and come back online
      wait_for_connection:
        timeout: 600
        delay: 30
      when: not hostvars['localhost']['alpine_domain_exists']

    - name: Wait additional time for AD services to start
      pause:
        seconds: 60
      when: not hostvars['localhost']['alpine_domain_exists']

    - name: Test WinRM connectivity
      ansible.windows.win_ping:
      register: ping_result
      retries: 5
      delay: 10
      until: ping_result is succeeded
      when: not hostvars['localhost']['alpine_domain_exists']

- name: Verify forest build and gather info
  hosts: alpine_forest_root_pdc
  gather_facts: no

  vars:
    windows_password: "{{ lookup('env', 'WINDOWS_PASSWORD') }}"

  tasks:
    - name: Verify domain is operational
      ansible.windows.win_powershell:
        script: |
          try {
            $domain = Get-ADDomain -Identity "alpine.lab" -ErrorAction Stop
            Write-Output "SUCCESS"
            Write-Output "Domain: $($domain.DNSRoot)"
            Write-Output "SID: $($domain.DomainSID.Value)"
            Write-Output "NetBIOS: $($domain.NetBIOSName)"
            Write-Output "DomainMode: $($domain.DomainMode)"
            Write-Output "ForestMode: $($domain.Forest)"
            Write-Output "PDC: $($domain.PDCEmulator)"
            exit 0
          } catch {
            Write-Output "FAILED"
            Write-Output $_.Exception.Message
            exit 1
          }
      register: domain_verify
      retries: 3
      delay: 30
      until: domain_verify.rc == 0

    - name: Extract domain SID
      set_fact:
        alpine_domain_sid: "{{ domain_verify.stdout_lines | select('search', 'SID:') | first | regex_replace('SID: ', '') }}"

    - name: Display forest information
      debug:
        msg:
          - "=========================================="
          - "✅ ALPINE.LAB FOREST BUILD COMPLETE"
          - "=========================================="
          - "{{ domain_verify.stdout_lines }}"
          - "=========================================="

    - name: Get FSMO role holders
      ansible.windows.win_powershell:
        script: |
          $forest = Get-ADForest
          $domain = Get-ADDomain
          Write-Output "Schema Master: $($forest.SchemaMaster)"
          Write-Output "Domain Naming Master: $($forest.DomainNamingMaster)"
          Write-Output "RID Master: $($domain.RIDMaster)"
          Write-Output "PDC Emulator: $($domain.PDCEmulator)"
          Write-Output "Infrastructure Master: $($domain.InfrastructureMaster)"
      register: fsmo_roles

    - name: Display FSMO roles
      debug:
        msg:
          - "FSMO Roles:"
          - "{{ fsmo_roles.stdout_lines }}"

- name: Save forest information to state files
  hosts: localhost
  gather_facts: yes

  tasks:
    - name: Create state directory
      file:
        path: "{{ playbook_dir }}/../state"
        state: directory
        mode: '0755'

    - name: Save alpine.lab domain information
      copy:
        content: |
          # alpine.lab Forest Information
          # Generated: {{ ansible_date_time.iso8601 }}

          domain_built: yes
          forest_root_pdc: GRANITE-DC
          forest_root_pdc_ip: 192.168.35.30
          domain_name: alpine.lab
          domain_netbios: ALPINE
          domain_sid: {{ hostvars[groups['alpine_forest_root_pdc'][0]]['alpine_domain_sid'] }}

          child_domains:
            mauna:
              built: no
              target_pdc: SLATE-DC
            rainier:
              built: no
              target_pdc: MARBLE-DC

          next_steps:
            - Run 4e-add-alpine-replica-dc.yml to add BASALT-DC replica
            - Run 4f-build-mauna-child-domain.yml to add mauna.alpine.lab
            - Run 4g-build-rainier-child-domain.yml to add rainier.alpine.lab
        dest: "{{ playbook_dir }}/../state/alpine-forest-status.yml"
        mode: '0644'
      when:
        - groups['alpine_forest_root_pdc'] is defined
        - groups['alpine_forest_root_pdc'] | length > 0
        - hostvars[groups['alpine_forest_root_pdc'][0]]['alpine_domain_sid'] is defined

    - name: Update consolidated domain SIDs file
      lineinfile:
        path: "{{ playbook_dir }}/../state/domain-sids.yml"
        line: "alpine.lab: {{ hostvars[groups['alpine_forest_root_pdc'][0]]['alpine_domain_sid'] }}"
        create: yes
        mode: '0644'
      when:
        - groups['alpine_forest_root_pdc'] is defined
        - groups['alpine_forest_root_pdc'] | length > 0
        - hostvars[groups['alpine_forest_root_pdc'][0]]['alpine_domain_sid'] is defined

    - name: Display completion summary
      debug:
        msg:
          - "=========================================="
          - "✅ ALPINE.LAB FOREST SUCCESSFULLY BUILT"
          - "=========================================="
          - "Forest Root PDC: GRANITE-DC"
          - "Domain: alpine.lab"
          - "Status: Operational"
          - ""
          - "Next Steps:"
          - "  1. Add replica DC: ansible-playbook 4e-add-alpine-replica-dc.yml"
          - "  2. Add child domain: ansible-playbook 4f-build-mauna-child-domain.yml"
          - "  3. Add child domain: ansible-playbook 4g-build-rainier-child-domain.yml"
          - "=========================================="