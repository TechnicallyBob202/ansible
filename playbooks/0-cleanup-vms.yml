---
- name: Cleanup All Lab VMs (Async)
  hosts: localhost
  gather_facts: no

  environment:
    ANSIBLE_ASYNC_DIR: "/tmp/semaphore/.ansible_async"

  vars:
    proxmox_host1: 192.168.33.21
    proxmox_host2: 192.168.33.22
    proxmox_user: root@pam
    proxmox_password: "{{ lookup('env', 'proxmox-root-password') }}"
    validate_certs: no

    # All VM IDs to cleanup
    vm_ids_host1:
      - 3510  # ATLAS
      - 3511  # SUMMIT
      - 3512  # PEAK
      - 3513  # RIDGE
      - 3520  # KOA-DC01
      - 3530  # GRANITE-DC01
      - 3532  # SLATE-DC01
      - 3534  # MARBLE-DC01
      - 3550  # MESA-R01

    vm_ids_host2:
      - 3514  # CREST
      - 3519  # SLOPE
      - 3521  # OAK-DC01
      - 3531  # BASALT-DC01
      - 3533  # SHALE-DC01
      - 3535  # QUARTZ-DC01
      - 3551  # BLUFF-R01
      - 3552  # CLIFF-R01

  tasks:
    - name: Display cleanup plan
      debug:
        msg:
          - "=========================================="
          - "CLEANUP: Destroying All Lab VMs (ASYNC)"
          - "=========================================="
          - "Host 1 ({{ proxmox_host1 }}): {{ vm_ids_host1 | length }} VMs"
          - "Host 2 ({{ proxmox_host2 }}): {{ vm_ids_host2 | length }} VMs"
          - "=========================================="
          - "WARNING: This will permanently delete all VMs!"
          - "Starting cleanup in 5 seconds..."
          - "=========================================="

    - name: Wait 5 seconds before cleanup
      pause:
        seconds: 5

    # ============================================
    # PHASE 1: KILL VMs FIRST (parallel, forced)
    # ============================================
    - name: Force kill VMs on Host 1 (async/parallel)
      community.general.proxmox_kvm:
        api_host: "{{ proxmox_host1 }}"
        api_user: "{{ proxmox_user }}"
        api_password: "{{ proxmox_password }}"
        validate_certs: "{{ validate_certs }}"
        vmid: "{{ item }}"
        node: semperis-nuc-1
        state: stopped
        force: yes
      loop: "{{ vm_ids_host1 }}"
      async: 30
      poll: 0
      ignore_errors: yes
      register: kill_host1_jobs

    - name: Force kill VMs on Host 2 (async/parallel)
      community.general.proxmox_kvm:
        api_host: "{{ proxmox_host2 }}"
        api_user: "{{ proxmox_user }}"
        api_password: "{{ proxmox_password }}"
        validate_certs: "{{ validate_certs }}"
        vmid: "{{ item }}"
        node: semperis-nuc-2
        state: stopped
        force: yes
      loop: "{{ vm_ids_host2 }}"
      async: 30
      poll: 0
      ignore_errors: yes
      register: kill_host2_jobs

    - name: Display kill jobs launched
      debug:
        msg: "Force-stopping all VMs in parallel. Waiting for completion..."

    - name: Brief pause for kill jobs to initialize
      pause:
        seconds: 2

    - name: Wait for Host 1 kill jobs to complete
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: kill_host1_results
      until: kill_host1_results.finished
      retries: 15
      delay: 2
      loop: "{{ kill_host1_jobs.results }}"
      loop_control:
        label: "VM {{ item.item }}"
      ignore_errors: yes
      failed_when: false

    - name: Wait for Host 2 kill jobs to complete
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: kill_host2_results
      until: kill_host2_results.finished
      retries: 15
      delay: 2
      loop: "{{ kill_host2_jobs.results }}"
      loop_control:
        label: "VM {{ item.item }}"
      ignore_errors: yes
      failed_when: false

    - name: Display kill completion
      debug:
        msg: "All VMs force-stopped (or were already stopped). Proceeding to deletion..."

    - name: Brief pause before deletion
      pause:
        seconds: 3

    # ============================================
    # PHASE 2: DELETE VMs (parallel)
    # ============================================
    - name: Destroy VMs on Host 1 (async/parallel)
      community.general.proxmox_kvm:
        api_host: "{{ proxmox_host1 }}"
        api_user: "{{ proxmox_user }}"
        api_password: "{{ proxmox_password }}"
        validate_certs: "{{ validate_certs }}"
        vmid: "{{ item }}"
        node: semperis-nuc-1
        state: absent
      loop: "{{ vm_ids_host1 }}"
      async: 60
      poll: 0
      ignore_errors: yes
      register: destroy_host1_jobs

    - name: Destroy VMs on Host 2 (async/parallel)
      community.general.proxmox_kvm:
        api_host: "{{ proxmox_host2 }}"
        api_user: "{{ proxmox_user }}"
        api_password: "{{ proxmox_password }}"
        validate_certs: "{{ validate_certs }}"
        vmid: "{{ item }}"
        node: semperis-nuc-2
        state: absent
      loop: "{{ vm_ids_host2 }}"
      async: 60
      poll: 0
      ignore_errors: yes
      register: destroy_host2_jobs

    - name: Display destroy jobs launched
      debug:
        msg: "Destroying all VMs in parallel. Waiting for completion..."

    - name: Brief pause for destroy jobs to initialize
      pause:
        seconds: 2

    - name: Wait for Host 1 destroy jobs to complete
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: destroy_host1_results
      until: destroy_host1_results.finished
      retries: 30
      delay: 2
      loop: "{{ destroy_host1_jobs.results }}"
      loop_control:
        label: "VM {{ item.item }}"
      ignore_errors: yes
      failed_when: false

    - name: Wait for Host 2 destroy jobs to complete
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: destroy_host2_results
      until: destroy_host2_results.finished
      retries: 30
      delay: 2
      loop: "{{ destroy_host2_jobs.results }}"
      loop_control:
        label: "VM {{ item.item }}"
      ignore_errors: yes
      failed_when: false

    - name: Display cleanup results
      debug:
        msg:
          - "=========================================="
          - "Cleanup Complete! (Async Mode)"
          - "=========================================="
          - "All lab VMs have been destroyed"
          - "- Phase 1: Force-stopped all VMs"
          - "- Phase 2: Deleted all VMs"
          - "Ready for fresh deployment"
          - "=========================================="