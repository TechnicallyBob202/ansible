---
# =============================================================================
# Stage 4: Build Organizational Unit (OU) Structure
# =============================================================================
# This playbook creates a comprehensive OU structure across all domains with:
#   - Tiered OU hierarchy (Tier 0/1/2)
#   - Domain-themed department OUs
#   - User accounts (admins, service accounts, regular users)
#   - Security and distribution groups
#   - Computer objects
#   - GPOs and GPO links
#   - Intentional security issues for DSP demos
# =============================================================================

- name: Build OU Structure - Introduction
  hosts: localhost
  gather_facts: yes
  tasks:
    - name: Display build plan
      debug:
        msg:
          - "========================================="
          - "  Stage 4: Build OU Structure & Populate Domains"
          - "========================================="
          - ""
          - "Creating comprehensive AD environment:"
          - ""
          - "For EACH domain (arbor, alpine, mauna, rainier):"
          - "  • Delete existing OU structure (clean slate)"
          - "  • Create tiered OU hierarchy"
          - "  • Generate 70+ themed user accounts"
          - "  • Create 30 security/distribution groups"
          - "  • Add 47 computer objects"
          - "  • Create and link 11 GPOs"
          - "  • Plant 7 security vulnerabilities (DSP demos)"
          - "  • Snapshot changed VMs"
          - ""
          - "Estimated time: 20-30 minutes"

# =============================================================================
# PHASE 1: Initialize Change Tracking
# =============================================================================
- name: Initialize Change Tracking
  hosts: all
  gather_facts: no
  serial: 0
  tasks:
    - name: Initialize vm_changed flag
      set_fact:
        vm_changed: false

# =============================================================================
# PHASE 2: Delete Existing OU Structure (Clean Slate)
# =============================================================================
- name: Delete Existing OU Structure
  hosts: arbor_pdc:alpine_pdc:alpine_mauna_pdc:alpine_rainier_pdc
  gather_facts: no
  serial: 0
  tasks:
    - name: Delete existing domain OU structure
      include_role:
        name: activeDirectory
        tasks_from: delete_ou_structure.yml
      register: delete_result

    - name: Mark VM as changed if OUs were deleted
      set_fact:
        vm_changed: "{{ vm_changed or (delete_result.changed | default(false)) }}"

# =============================================================================
# PHASE 3: Create OU Structure
# =============================================================================
- name: Create OU Structure
  hosts: arbor_pdc:alpine_pdc:alpine_mauna_pdc:alpine_rainier_pdc
  gather_facts: no
  serial: 0
  tasks:
    - name: Create OU hierarchy
      include_role:
        name: activeDirectory
        tasks_from: create_ou_structure.yml
      register: ou_result

    - name: Mark VM as changed if OUs were created
      set_fact:
        vm_changed: "{{ vm_changed or (ou_result.changed | default(false)) }}"

# =============================================================================
# PHASE 4: Create GPOs
# =============================================================================
- name: Create Group Policy Objects
  hosts: arbor_pdc:alpine_pdc:alpine_mauna_pdc:alpine_rainier_pdc
  gather_facts: no
  serial: 0
  tasks:
    - name: Create GPOs
      include_role:
        name: activeDirectory
        tasks_from: create_gpos.yml
      register: gpo_result

    - name: Mark VM as changed if GPOs were created
      set_fact:
        vm_changed: "{{ vm_changed or (gpo_result.changed | default(false)) }}"

# =============================================================================
# PHASE 5: Link GPOs to OUs
# =============================================================================
- name: Link GPOs to OUs
  hosts: arbor_pdc:alpine_pdc:alpine_mauna_pdc:alpine_rainier_pdc
  gather_facts: no
  serial: 0
  tasks:
    - name: Link GPOs
      include_role:
        name: activeDirectory
        tasks_from: link_gpos.yml
      register: link_result

    - name: Mark VM as changed if GPOs were linked
      set_fact:
        vm_changed: "{{ vm_changed or (link_result.changed | default(false)) }}"

# =============================================================================
# PHASE 6: Create User Accounts
# =============================================================================
- name: Create User Accounts
  hosts: arbor_pdc:alpine_pdc:alpine_mauna_pdc:alpine_rainier_pdc
  gather_facts: no
  serial: 0
  tasks:
    - name: Create users
      include_role:
        name: activeDirectory
        tasks_from: create_users.yml
      register: user_result

    - name: Mark VM as changed if users were created
      set_fact:
        vm_changed: "{{ vm_changed or (user_result.changed | default(false)) }}"

# =============================================================================
# PHASE 7: Create Groups
# =============================================================================
- name: Create Security and Distribution Groups
  hosts: arbor_pdc:alpine_pdc:alpine_mauna_pdc:alpine_rainier_pdc
  gather_facts: no
  serial: 0
  tasks:
    - name: Create groups
      include_role:
        name: activeDirectory
        tasks_from: create_groups.yml
      register: group_result

    - name: Mark VM as changed if groups were created
      set_fact:
        vm_changed: "{{ vm_changed or (group_result.changed | default(false)) }}"

# =============================================================================
# PHASE 8: Create Computer Objects
# =============================================================================
- name: Create Computer Objects
  hosts: arbor_pdc:alpine_pdc:alpine_mauna_pdc:alpine_rainier_pdc
  gather_facts: no
  serial: 0
  tasks:
    - name: Create computers
      include_role:
        name: activeDirectory
        tasks_from: create_computers.yml
      register: computer_result

    - name: Mark VM as changed if computers were created
      set_fact:
        vm_changed: "{{ vm_changed or (computer_result.changed | default(false)) }}"

# =============================================================================
# PHASE 9: Create Test Accounts (for attack simulations)
# =============================================================================
- name: Create Test Accounts
  hosts: arbor_pdc:alpine_pdc:alpine_mauna_pdc:alpine_rainier_pdc
  gather_facts: no
  serial: 0
  tasks:
    - name: Create test accounts
      include_role:
        name: activeDirectory
        tasks_from: create_test_accounts.yml
      register: test_result

    - name: Mark VM as changed if test accounts were created
      set_fact:
        vm_changed: "{{ vm_changed or (test_result.changed | default(false)) }}"

# =============================================================================
# PHASE 10: Assign Group Memberships
# =============================================================================
- name: Assign Group Memberships
  hosts: arbor_pdc:alpine_pdc:alpine_mauna_pdc:alpine_rainier_pdc
  gather_facts: no
  serial: 0
  tasks:
    - name: Populate group memberships
      include_role:
        name: activeDirectory
        tasks_from: assign_memberships.yml
      register: membership_result

    - name: Mark VM as changed if memberships were assigned
      set_fact:
        vm_changed: "{{ vm_changed or (membership_result.changed | default(false)) }}"

# =============================================================================
# PHASE 11: Create Security Issues (for DSP demos)
# =============================================================================
- name: Create Intentional Security Issues
  hosts: arbor_pdc:alpine_pdc:alpine_mauna_pdc:alpine_rainier_pdc
  gather_facts: no
  serial: 0
  tasks:
    - name: Plant security issues
      include_role:
        name: activeDirectory
        tasks_from: create_security_issues.yml
      register: security_result

    - name: Mark VM as changed if security issues were created
      set_fact:
        vm_changed: "{{ vm_changed or (security_result.changed | default(false)) }}"

# =============================================================================
# PHASE 12: Validation
# =============================================================================
- name: Validate OU Structure and Objects
  hosts: arbor_pdc:alpine_pdc:alpine_mauna_pdc:alpine_rainier_pdc
  gather_facts: no
  tasks:
    - name: Count created objects
      ansible.windows.win_shell: |
        $domain = "{{ domain_name }}"
        $dn = (Get-ADDomain -Identity $domain).DistinguishedName

        $stats = @{
          OUs = (Get-ADOrganizationalUnit -Filter * -SearchBase $dn).Count
          Users = (Get-ADUser -Filter * -SearchBase $dn).Count
          Groups = (Get-ADGroup -Filter * -SearchBase $dn).Count
          Computers = (Get-ADComputer -Filter * -SearchBase $dn).Count
          GPOs = (Get-GPO -All -Domain $domain).Count
        }

        $stats | ConvertTo-Json
      register: object_counts
      changed_when: false

    - name: Display domain statistics
      debug:
        msg:
          - "{{ domain_name }} Object Count:"
          - "  OUs: {{ (object_counts.stdout | from_json).OUs }}"
          - "  Users: {{ (object_counts.stdout | from_json).Users }}"
          - "  Groups: {{ (object_counts.stdout | from_json).Groups }}"
          - "  Computers: {{ (object_counts.stdout | from_json).Computers }}"
          - "  GPOs: {{ (object_counts.stdout | from_json).GPOs }}"

# =============================================================================
# PHASE 13: Snapshot Changed VMs
# =============================================================================
- name: Snapshot After OU Build
  hosts: all
  gather_facts: no
  serial: 2
  tasks:
    - name: Display snapshot plan
      debug:
        msg: "{{ inventory_hostname }} - Will {{ 'CREATE' if (vm_changed | default(false)) else 'SKIP' }} snapshot"

    - name: Take snapshot - only for changed VMs
      include_role:
        name: proxmox
        tasks_from: snapshot.yml
        apply:
          delegate_to: localhost
      vars:
        snapshot_name: post-ou-build
      when: vm_changed | default(false)

# =============================================================================
# PHASE 14: Final Summary
# =============================================================================
- name: Build Summary
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Count changed VMs
      set_fact:
        changed_dcs: "{{ groups['domain_controllers'] | map('extract', hostvars, 'vm_changed') | select('equalto', true) | list | length }}"
        total_dcs: "{{ groups['domain_controllers'] | length }}"

    - name: Display completion summary
      debug:
        msg:
          - "========================================="
          - "  OU Build Complete!"
          - "========================================="
          - ""
          - "Snapshots Created: {{ changed_dcs }}/{{ total_dcs }} DCs"
          - ""
          - "Each domain now contains:"
          - "  ✓ 15 Organizational Units"
          - "  ✓ 70+ User accounts (themed names)"
          - "  ✓ 30 Security/Distribution groups"
          - "  ✓ 47 Computer objects"
          - "  ✓ 11 Group Policy Objects"
          - "  ✓ 7 Security vulnerabilities (DSP demos)"
          - ""
          - "Lab is ready for ADFR/DSP testing!"