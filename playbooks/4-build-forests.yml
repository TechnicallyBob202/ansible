---
- name: Build and validate forests/domains
  hosts: localhost
  gather_facts: no

  vars:
    safe_mode_password: "{{ lookup('env','WINDOWS_PASSWORD') }}"
    ansible_user: Administrator
    ansible_password: "{{ lookup('env','WINDOWS_PASSWORD') }}"
    forests:
      - name: arbor.lab
        dcs:
          - KOA-DC
          - OAK-DC
      - name: alpine.lab
        dcs:
          - GRANITE-DC
          - BASALT-DC
      - name: mauna.alpine.lab
        dcs:
          - SLATE-DC
          - SHALE-DC
      - name: rainier.alpine.lab
        dcs:
          - MARBLE-DC
          - QUARTZ-DC

  tasks:

    - name: Process each forest
      block:

        - name: Check if domain exists
          ansible.windows.win_powershell:
            script: |
              try {
                $domain = Get-ADDomain -Identity "{{ forest.name }}" -ErrorAction Stop
                $result = @{ DomainFound = $true }
              } catch {
                $result = @{ DomainFound = $false }
              }
              $result | ConvertTo-Json -Compress
          register: domain_check
          ignore_errors: yes

        - name: Set domain existence fact
          set_fact:
            domain_found: "{{ (domain_check.stdout | from_json).DomainFound | default(false) }}"

        - name: Check reachability of all expected DCs
          ansible.windows.win_powershell:
            script: |
              $dcs = @()
              {% for dc in forest.dcs %}
              $dcs += @{
                Name = "{{ dc }}"
                Reachable = Test-NetConnection -ComputerName "{{ dc }}" -Port 5985 -InformationLevel Quiet
              }
              {% endfor %}
              $dcs | ConvertTo-Json -Compress
          register: dc_reach_results

        - name: Set fact - all expected DCs reachable
          set_fact:
            all_dcs_reachable: "{{ dc_reach_results.stdout | from_json | map(attribute='Reachable') | list | select('equalto', false) | list | length == 0 }}"

        - name: Skip promotion if domain exists and all DCs reachable
          ansible.builtin.meta: end_block
          when: domain_found and all_dcs_reachable

        - name: Promote missing DCs
          block:

            - name: Promote DC if missing
              ansible.windows.win_domain:
                dns_domain_name: "{{ forest.name }}"
                domain_admin_user: "{{ ansible_user }}"
                domain_admin_password: "{{ ansible_password }}"
                safe_mode_admin_password: "{{ safe_mode_password }}"
                state: domain_controller
                install_dns: yes
              when: "'{{ item }}' not in dc_reach_results.stdout | from_json | map(attribute='Reachable') | list | select('equalto', true) | list"
              loop: "{{ forest.dcs }}"
              loop_control:
                loop_var: item
              register: promote_result

            - name: Wait 30s after promotion
              ansible.builtin.pause:
                seconds: 30

            - name: Test connectivity to all DCs after promotion
              ansible.windows.win_powershell:
                script: |
                  Test-NetConnection -ComputerName "{{ item }}" -Port 5985 -InformationLevel Quiet
              loop: "{{ forest.dcs }}"
              loop_control:
                loop_var: item
              register: post_promo_test

            - name: Fail if any DC unreachable after promotion
              fail:
                msg: "One or more DCs in {{ forest.name }} are unreachable after promotion."
              when: post_promo_test.results | map(attribute='stdout') | map('bool') | select('equalto', false) | list | length > 0

      loop: "{{ forests }}"
      loop_control:
        loop_var: forest
