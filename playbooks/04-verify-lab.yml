---
- name: Verify Lab Environment and Generate Documentation
  hosts: all
  gather_facts: no

  tasks:
    - name: Display verification plan
      debug:
        msg: "Verifying {{ ansible_play_hosts | length }} systems"
      run_once: yes

# =============================================================================
# PHASE 1: Connectivity Tests
# =============================================================================
- name: Test Basic Connectivity
  hosts: all
  gather_facts: no

  tasks:
    - name: Test WinRM connectivity
      ansible.windows.win_ping:
      register: connectivity_test

    - name: Display connectivity results
      debug:
        msg: "{{ inventory_hostname }} - {{ 'ONLINE' if connectivity_test is succeeded else 'OFFLINE' }}"

# =============================================================================
# PHASE 2: Validate Windows Configuration
# =============================================================================
- name: Validate Windows Configuration
  hosts: all
  gather_facts: no

  tasks:
    - name: Get network configuration
      ansible.windows.win_shell: |
        $adapter = Get-NetAdapter | Where-Object {$_.Status -eq "Up"} | Select-Object -First 1
        $ip = Get-NetIPAddress -InterfaceAlias $adapter.Name -AddressFamily IPv4
        $dns = Get-DnsClientServerAddress -InterfaceAlias $adapter.Name -AddressFamily IPv4

        [PSCustomObject]@{
          Hostname = $env:COMPUTERNAME
          IPAddress = $ip.IPAddress
          DNS = $dns.ServerAddresses -join ","
        } | ConvertTo-Json
      register: network_info
      changed_when: false

    - name: Parse network information
      set_fact:
        network_config: "{{ network_info.stdout | from_json }}"

    - name: Display configuration
      debug:
        msg:
          - "{{ inventory_hostname }}:"
          - "  IP: {{ network_config.IPAddress }}"
          - "  Hostname: {{ network_config.Hostname }}"
          - "  DNS: {{ network_config.DNS }}"

# =============================================================================
# PHASE 3: Validate Active Directory
# =============================================================================
- name: Validate Active Directory Health
  hosts: domain_controllers
  gather_facts: no

  tasks:
    - name: Check domain status
      include_role:
        name: activeDirectory
        tasks_from: check_domain_status.yml

    - name: Verify replication
      include_role:
        name: activeDirectory
        tasks_from: verify_replication.yml

    - name: Check FSMO roles
      include_role:
        name: activeDirectory
        tasks_from: check_fsmo_roles.yml

# =============================================================================
# PHASE 4: Generate Documentation
# =============================================================================
- name: Generate Lab Documentation
  hosts: localhost
  gather_facts: yes

  tasks:
    - name: Create documentation directory
      file:
        path: "{{ playbook_dir }}/../files"
        state: directory
        mode: '0755'

    - name: Generate and push mRemoteNG configuration
      include_tasks: ../tasks/generate_mremoteng.yml

    - name: Display verification summary
      debug:
        msg:
          - "Lab verification complete!"
          - "All systems validated and operational"
          - "Documentation generated in files/"
