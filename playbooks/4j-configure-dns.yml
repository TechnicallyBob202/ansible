---
- name: Configure DNS forwarders and conditional forwarding
  hosts: domain_controllers
  gather_facts: no
  vars:
    windows_password: "{{ lookup('env','WINDOWS_PASSWORD') }}"
    
  tasks:
    - name: Get current domain
      ansible.windows.win_powershell:
        script: |
          try {
            $domain = Get-ADDomain -ErrorAction Stop
            $output = @{
              DNSRoot = $domain.DNSRoot
              NetBIOSName = $domain.NetBIOSName
            }
            $output | ConvertTo-Json -Compress
          } catch {
            Write-Output "NOT_A_DC"
            exit 1
          }
      register: current_domain
      failed_when: false
      changed_when: false

    - name: Parse domain info
      set_fact:
        domain_info: "{{ current_domain.output[0] | from_json }}"
      when: 
        - current_domain.rc == 0
        - current_domain.output is defined
        - current_domain.output | length > 0

    - name: Skip non-DCs
      meta: end_host
      when: current_domain.rc != 0

    - name: Display current domain
      debug:
        msg: "Configuring DNS for {{ domain_info.DNSRoot }} ({{ domain_info.NetBIOSName }})"
      when: domain_info is defined

    - name: Configure DNS forwarders (Cloudflare and Google)
      ansible.windows.win_powershell:
        script: |
          $forwarders = @("1.1.1.1", "8.8.8.8")
          Set-DnsServerForwarder -IPAddress $forwarders -PassThru
          Write-Output "DNS forwarders configured: $($forwarders -join ', ')"
      register: forwarder_result
      changed_when: true

    - name: Display forwarder result
      debug:
        msg: "{{ forwarder_result.output | default(['Forwarders configured']) }}"
      when: forwarder_result.output is defined

    - name: Configure conditional forwarder to arbor.lab (from alpine.lab DCs)
      ansible.windows.win_powershell:
        script: |
          $zoneName = "arbor.lab"
          $masterServers = @("192.168.35.20", "192.168.35.21")
          
          # Check if conditional forwarder exists
          $existingZone = Get-DnsServerZone -Name $zoneName -ErrorAction SilentlyContinue
          
          if ($existingZone -and $existingZone.ZoneType -eq "Forwarder") {
            Write-Output "Conditional forwarder for $zoneName already exists"
            exit 0
          } elseif ($existingZone) {
            Write-Output "Zone $zoneName exists but is not a forwarder zone"
            exit 1
          } else {
            Add-DnsServerConditionalForwarderZone -Name $zoneName -MasterServers $masterServers -PassThru
            Write-Output "Conditional forwarder for $zoneName created successfully"
            exit 0
          }
      register: arbor_forwarder
      failed_when: arbor_forwarder.rc == 1
      changed_when: arbor_forwarder.rc == 0 and 'created successfully' in (arbor_forwarder.output | join(' '))
      when: domain_info.DNSRoot == 'alpine.lab' or domain_info.DNSRoot == 'mauna.alpine.lab' or domain_info.DNSRoot == 'rainier.alpine.lab'

    - name: Display arbor.lab forwarder result
      debug:
        msg: "{{ arbor_forwarder.output | default(['Skipped']) }}"
      when: 
        - arbor_forwarder is defined
        - arbor_forwarder.output is defined

    - name: Configure conditional forwarder to alpine.lab (from arbor.lab DCs)
      ansible.windows.win_powershell:
        script: |
          $zoneName = "alpine.lab"
          $masterServers = @("192.168.35.30", "192.168.35.31")
          
          # Check if conditional forwarder exists
          $existingZone = Get-DnsServerZone -Name $zoneName -ErrorAction SilentlyContinue
          
          if ($existingZone -and $existingZone.ZoneType -eq "Forwarder") {
            Write-Output "Conditional forwarder for $zoneName already exists"
            exit 0
          } elseif ($existingZone) {
            Write-Output "Zone $zoneName exists but is not a forwarder zone"
            exit 1
          } else {
            Add-DnsServerConditionalForwarderZone -Name $zoneName -MasterServers $masterServers -PassThru
            Write-Output "Conditional forwarder for $zoneName created successfully"
            exit 0
          }
      register: alpine_forwarder
      failed_when: alpine_forwarder.rc == 1
      changed_when: alpine_forwarder.rc == 0 and 'created successfully' in (alpine_forwarder.output | join(' '))
      when: domain_info.DNSRoot == 'arbor.lab'

    - name: Display alpine.lab forwarder result
      debug:
        msg: "{{ alpine_forwarder.output | default(['Skipped']) }}"
      when: 
        - alpine_forwarder is defined
        - alpine_forwarder.output is defined

    - name: Verify DNS configuration
      ansible.windows.win_powershell:
        script: |
          $config = @{}
          
          # Get forwarders
          $forwarders = Get-DnsServerForwarder
          $config.Forwarders = $forwarders.IPAddress.IPAddressToString -join ", "
          
          # Get conditional forwarders
          $conditionalZones = Get-DnsServerZone | Where-Object { $_.ZoneType -eq "Forwarder" }
          $config.ConditionalForwarders = ($conditionalZones | ForEach-Object { $_.ZoneName }) -join ", "
          
          if (-not $config.ConditionalForwarders) {
            $config.ConditionalForwarders = "None"
          }
          
          $config | ConvertTo-Json -Compress
      register: dns_verification
      changed_when: false

    - name: Parse and display DNS configuration
      debug:
        msg: "{{ dns_verification.output[0] | from_json }}"
      when: 
        - dns_verification.output is defined
        - dns_verification.output | length > 0

- name: DNS configuration summary
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Display completion message
      debug:
        msg: "DNS configuration complete for all domain controllers"
