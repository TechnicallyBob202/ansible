---
- name: Discover IPs and Configure Static Network
  hosts: all
  gather_facts: no

  tasks:
    - name: Display configuration plan
      debug:
        msg: "Configuring network for {{ ansible_play_hosts | length }} VMs"
      run_once: yes

# =============================================================================
# PHASE 1: Discover Current IPs
# =============================================================================
- name: Discover Current IPs
  hosts: all
  gather_facts: no
  serial: 0

  tasks:
    - name: Save target static IP from inventory
      set_fact:
        target_ip: "{{ ansible_host }}"

    - name: Discover current IP from Proxmox
      include_role:
        name: windows
        tasks_from: discover_ip.yml

    - name: Check if IP already matches target
      set_fact:
        needs_ip_config: "{{ discovered_ip != target_ip }}"

    - name: Update ansible_host to discovered IP
      set_fact:
        ansible_host: "{{ discovered_ip }}"

    - name: Display IP status
      debug:
        msg: "{{ inventory_hostname }}: Current={{ discovered_ip }}, Target={{ target_ip }}, NeedsConfig={{ needs_ip_config }}"

# =============================================================================
# PHASE 2: Configure Static IPs
# =============================================================================
- name: Configure Static IP Addresses
  hosts: all
  gather_facts: no
  serial: 0

  tasks:
    - name: Set static IP
      include_role:
        name: windows
        tasks_from: set_static_ip.yml
      when: needs_ip_config

    - name: Update ansible_host to static IP
      set_fact:
        ansible_host: "{{ target_ip }}"
      when: needs_ip_config

    - name: Wait for all IPs to settle
      pause:
        seconds: 10
      run_once: yes
      when: hostvars | dict2items | selectattr('value.needs_ip_config', 'defined') | selectattr('value.needs_ip_config', 'equalto', true) | list | length > 0

# =============================================================================
# PHASE 3: Configure DNS (Cloudflare) and Hostname
# =============================================================================
- name: Configure DNS and Hostname
  hosts: all
  gather_facts: no
  serial: 0

  tasks:
    - name: Configure DNS servers (Cloudflare from all.yml)
      include_role:
        name: windows
        tasks_from: set_dns.yml

    - name: Set hostname
      include_role:
        name: windows
        tasks_from: set_hostname.yml

# =============================================================================
# PHASE 4: Reboot hosts that need it
# =============================================================================
- name: Reboot hosts that changed hostname
  hosts: all
  gather_facts: no
  serial: 0

  tasks:
    - name: Reboot if needed
      include_role:
        name: windows
        tasks_from: reboot.yml
      when: reboot_required | default(false)

# =============================================================================
# PHASE 5: Validation
# =============================================================================
- name: Validate Configuration
  hosts: all
  gather_facts: no

  tasks:
    - name: Get network configuration
      ansible.windows.win_shell: |
        $adapter = Get-NetAdapter | Where-Object {$_.Status -eq "Up"} | Select-Object -First 1
        $ip = Get-NetIPAddress -InterfaceAlias $adapter.Name -AddressFamily IPv4
        $dns = Get-DnsClientServerAddress -InterfaceAlias $adapter.Name -AddressFamily IPv4

        [PSCustomObject]@{
          Hostname = $env:COMPUTERNAME
          IPAddress = $ip.IPAddress
          DNS = $dns.ServerAddresses -join ","
        } | ConvertTo-Json
      register: network_info
      changed_when: false

    - name: Parse network information
      set_fact:
        network_config: "{{ network_info.stdout | from_json }}"

    - name: Validate configuration
      debug:
        msg:
          - "{{ inventory_hostname }}:"
          - "  IP: {{ network_config.IPAddress }} (expected: {{ ansible_host }})"
          - "  Hostname: {{ network_config.Hostname }} (expected: {{ inventory_hostname }})"
          - "  DNS: {{ network_config.DNS }} (Cloudflare)"

    - name: Summary
      debug:
        msg: "All {{ ansible_play_hosts | length }} VMs configured successfully"
      run_once: yes

# =============================================================================
# PHASE 6: Snapshot
# =============================================================================
- name: Snapshot after base OS configuration
  hosts: all
  gather_facts: no
  serial: 2
  tasks:
    - name: Take snapshot
      include_role:
        name: proxmox
        tasks_from: snapshot.yml
        apply:
          delegate_to: localhost
      vars:
        snapshot_name: post-config
