---
- name: Validate VMs and Generate ADFR Lab Inventory from Design
  hosts: localhost
  gather_facts: no

  vars:
    windows_password: "{{ lookup('env', 'WINDOWS_PASSWORD') }}"

    # ========================================
    # LAB DESIGN SPECIFICATION
    # ========================================
    # Define what we WANT the lab to look like
    lab_design:
      forest_root:
        domain_name: "arbor.local"
        netbios_name: "ARBOR"
        dcs:
          - hostname: "dc-arbor-01"
            ip: "192.168.33.101"
            role: "forest_root_primary"
            memory_gb: 8
            site: "Default-First-Site-Name"
          - hostname: "dc-arbor-02"
            ip: "192.168.33.102"
            role: "forest_root_additional"
            memory_gb: 8
            site: "Default-First-Site-Name"

      child_domains:
        - domain_name: "prod.arbor.local"
          netbios_name: "PROD"
          parent: "arbor.local"
          dcs:
            - hostname: "dc-prod-01"
              ip: "192.168.33.111"
              role: "child_domain_primary"
              memory_gb: 4
              site: "Default-First-Site-Name"
            - hostname: "dc-prod-02"
              ip: "192.168.33.112"
              role: "child_domain_additional"
              memory_gb: 4
              site: "Default-First-Site-Name"

        - domain_name: "dev.arbor.local"
          netbios_name: "DEV"
          parent: "arbor.local"
          dcs:
            - hostname: "dc-dev-01"
              ip: "192.168.33.121"
              role: "child_domain_primary"
              memory_gb: 4
              site: "Default-First-Site-Name"
            - hostname: "dc-dev-02"
              ip: "192.168.33.122"
              role: "child_domain_additional"
              memory_gb: 4
              site: "Default-First-Site-Name"

  tasks:
    # ========================================
    # VALIDATION: Check if VMs exist
    # ========================================
    - name: Build list of expected VMs
      ansible.builtin.set_fact:
        expected_vms: >-
          {{ lab_design.forest_root.dcs +
             (lab_design.child_domains | map(attribute='dcs') | flatten | list) }}

    - name: Display expected VMs
      ansible.builtin.debug:
        msg: |
          ========================================
          EXPECTED LAB DESIGN
          ========================================
          Total VMs Expected: {{ expected_vms | length }}

          Forest Root ({{ lab_design.forest_root.domain_name }}):
          {% for dc in lab_design.forest_root.dcs %}
          - {{ dc.hostname }} ({{ dc.ip }}) - {{ dc.role }} - {{ dc.memory_gb }}GB RAM
          {% endfor %}

          {% for domain in lab_design.child_domains %}
          Child Domain ({{ domain.domain_name }}):
          {% for dc in domain.dcs %}
          - {{ dc.hostname }} ({{ dc.ip }}) - {{ dc.role }} - {{ dc.memory_gb }}GB RAM
          {% endfor %}

          {% endfor %}

    - name: Test connectivity to each expected VM
      ansible.builtin.wait_for:
        host: "{{ item.ip }}"
        port: 5985
        timeout: 5
        state: started
      loop: "{{ expected_vms }}"
      register: connectivity_test
      ignore_errors: yes

    - name: Analyze connectivity results
      ansible.builtin.set_fact:
        online_vms: "{{ connectivity_test.results | selectattr('failed', 'undefined') | map(attribute='item') | list }}"
        offline_vms: "{{ connectivity_test.results | selectattr('failed', 'defined') | selectattr('failed', 'equalto', true) | map(attribute='item') | list }}"

    - name: Display validation results
      ansible.builtin.debug:
        msg: |
          ========================================
          VM VALIDATION RESULTS
          ========================================
          ✅ Online VMs: {{ online_vms | length }}/{{ expected_vms | length }}
          {% for vm in online_vms %}
          ✅ {{ vm.hostname }} ({{ vm.ip }}) - Ready
          {% endfor %}

          {% if offline_vms | length > 0 %}
          ❌ Offline VMs: {{ offline_vms | length }}
          {% for vm in offline_vms %}
          ❌ {{ vm.hostname }} ({{ vm.ip }}) - Not reachable on WinRM port 5985
          {% endfor %}

          ⚠️  WARNING: Some VMs are not ready!
          {% else %}
          🎉 All VMs are online and ready!
          {% endif %}
          ========================================

    - name: Fail if critical VMs are missing
      ansible.builtin.fail:
        msg: |
          ❌ CRITICAL: Cannot proceed - required VMs are offline

          Missing VMs:
          {% for vm in offline_vms %}
          - {{ vm.hostname }} ({{ vm.ip }})
          {% endfor %}

          Please ensure all VMs are:
          1. Powered on
          2. Have WinRM enabled
          3. Are reachable on port 5985
          4. Have completed steps 1 & 2
      when: offline_vms | length > 0

    # ========================================
    # GENERATE INVENTORY FROM DESIGN
    # ========================================
    - name: Build inventory content from design
      ansible.builtin.set_fact:
        inventory_content: |
          # ========================================
          # SEMPERIS ADFR & DSP LAB INVENTORY
          # ========================================
          # Generated: {{ ansible_date_time.date }} {{ ansible_date_time.time }}
          # Based on lab design specification
          #
          # Lab Architecture:
          # - Forest Root: {{ lab_design.forest_root.domain_name }} ({{ lab_design.forest_root.dcs | length }} DCs)
          {% for domain in lab_design.child_domains %}
          # - Child Domain: {{ domain.domain_name }} ({{ domain.dcs | length }} DCs)
          {% endfor %}
          #
          # Total Domain Controllers: {{ expected_vms | length }}

          [all:vars]
          ansible_user=Administrator
          ansible_password={{ "{{" }} lookup('env', 'WINDOWS_PASSWORD') {{ "}}" }}
          ansible_connection=winrm
          ansible_winrm_transport=ntlm
          ansible_winrm_server_cert_validation=ignore
          ansible_port=5985

          # ========================================
          # ALL WINDOWS SERVERS (for steps 1-2)
          # ========================================
          [windows_servers]
          {% for vm in expected_vms | sort(attribute='hostname') %}
          {{ vm.hostname }} ansible_host={{ vm.ip }}  # {{ vm.role }} - {{ vm.memory_gb }}GB RAM
          {% endfor %}

          # ========================================
          # FOREST ROOT DOMAIN: {{ lab_design.forest_root.domain_name }}
          # ========================================
          # First DC - creates the forest (step 3)
          [forest_root_dc]
          {% for dc in lab_design.forest_root.dcs %}
          {% if dc.role == 'forest_root_primary' %}
          {{ dc.hostname }} ansible_host={{ dc.ip }} ad_site={{ dc.site }}
          {% endif %}
          {% endfor %}

          # Additional DCs in forest root (step 4)
          [forest_root_additional_dcs]
          {% for dc in lab_design.forest_root.dcs %}
          {% if dc.role == 'forest_root_additional' %}
          {{ dc.hostname }} ansible_host={{ dc.ip }} ad_site={{ dc.site }}
          {% endif %}
          {% endfor %}

          # ========================================
          # CHILD DOMAIN CONTROLLERS
          # ========================================
          # First DC in each child domain (step 3)
          [child_domain_dcs]
          {% for domain in lab_design.child_domains %}
          {% for dc in domain.dcs %}
          {% if dc.role == 'child_domain_primary' %}
          {{ dc.hostname }} ansible_host={{ dc.ip }} target_domain={{ domain.domain_name }} target_netbios={{ domain.netbios_name }} parent_domain={{ domain.parent }} ad_site={{ dc.site }}
          {% endif %}
          {% endfor %}
          {% endfor %}

          # ========================================
          # ADDITIONAL DOMAIN CONTROLLERS (step 4)
          # ========================================
          [additional_domain_controllers]
          # Additional forest root DCs
          {% for dc in lab_design.forest_root.dcs %}
          {% if dc.role == 'forest_root_additional' %}
          {{ dc.hostname }} ansible_host={{ dc.ip }} dc_type=forest_root_additional ad_site={{ dc.site }}
          {% endif %}
          {% endfor %}

          # Additional child domain DCs
          {% for domain in lab_design.child_domains %}
          {% for dc in domain.dcs %}
          {% if dc.role == 'child_domain_additional' %}
          {{ dc.hostname }} ansible_host={{ dc.ip }} dc_type=child_domain_additional target_domain={{ domain.domain_name }} target_netbios={{ domain.netbios_name }} ad_site={{ dc.site }}
          {% endif %}
          {% endfor %}
          {% endfor %}

          # ========================================
          # AGGREGATE GROUPS
          # ========================================
          [domain_controllers:children]
          forest_root_dc
          forest_root_additional_dcs
          child_domain_dcs
          additional_domain_controllers

          # Semperis Management Server (first DC)
          [semperis_servers:children]
          forest_root_dc

          # Distribution Points (first DC in each domain)
          [semperis_distribution_points]
          {% for dc in lab_design.forest_root.dcs %}
          {% if dc.role == 'forest_root_primary' %}
          {{ dc.hostname }} ansible_host={{ dc.ip }}
          {% endif %}
          {% endfor %}
          {% for domain in lab_design.child_domains %}
          {% for dc in domain.dcs %}
          {% if dc.role == 'child_domain_primary' %}
          {{ dc.hostname }} ansible_host={{ dc.ip }}
          {% endif %}
          {% endfor %}
          {% endfor %}

    - name: Write inventory file
      ansible.builtin.copy:
        content: "{{ inventory_content }}"
        dest: "{{ playbook_dir }}/../inventory/adfr-lab"
        mode: '0644'

    - name: Create validation report
      ansible.builtin.copy:
        content: |
          # ADFR Lab Validation Report
          Generated: {{ ansible_date_time.iso8601 }}

          ## Design Specification
          - Forest Root: {{ lab_design.forest_root.domain_name }}
          - Child Domains: {{ lab_design.child_domains | length }}
          - Total DCs: {{ expected_vms | length }}

          ## Validation Results
          - VMs Online: {{ online_vms | length }}/{{ expected_vms | length }}
          - VMs Offline: {{ offline_vms | length }}

          ## Expected VMs
          {% for vm in expected_vms | sort(attribute='hostname') %}
          - {{ vm.hostname }} ({{ vm.ip }}) - {{ vm.role }} - {% if vm in online_vms %}✅ READY{% else %}❌ OFFLINE{% endif %}

          {% endfor %}

          ## Next Steps
          {% if offline_vms | length == 0 %}
          ✅ All VMs validated and ready for DC promotion

          Proceed with:
          1. Step 3: Promote first DCs (forest root + child domains)
          2. Step 4: Promote additional DCs
          3. Step 5: Post-DC configuration
          4. Step 6: Semperis ADFR preparation
          {% else %}
          ❌ Fix offline VMs before proceeding:
          {% for vm in offline_vms %}
          - {{ vm.hostname }} ({{ vm.ip }})
          {% endfor %}
          {% endif %}
        dest: "{{ playbook_dir }}/../inventory/adfr-lab.validation"
        mode: '0644'

    # ========================================
    # GIT COMMIT AND PUSH
    # ========================================
    - name: Configure git user
      ansible.builtin.shell: |
        cd {{ playbook_dir }}/..
        git config user.name "Semaphore Ansible" || true
        git config user.email "ansible@semaphore.local" || true
      changed_when: false

    - name: Add inventory files to git
      ansible.builtin.shell: |
        cd {{ playbook_dir }}/..
        git add inventory/adfr-lab
        git add inventory/adfr-lab.validation
      register: git_add
      changed_when: true

    - name: Check if there are changes to commit
      ansible.builtin.shell: |
        cd {{ playbook_dir }}/..
        git diff --cached --quiet
      register: git_diff
      failed_when: false
      changed_when: false

    - name: Commit inventory files
      ansible.builtin.shell: |
        cd {{ playbook_dir }}/..
        git commit -m "Add ADFR Lab inventory and validation report"
      register: git_commit
      when: git_diff.rc != 0
      changed_when: true

    - name: Push to git repository
      ansible.builtin.shell: |
        cd {{ playbook_dir }}/..
        git push origin $(git branch --show-current)
      register: git_push
      when: git_diff.rc != 0
      changed_when: true

    # ========================================
    # FINAL SUMMARY
    # ========================================
    - name: Display final summary
      ansible.builtin.debug:
        msg: |
          ╔════════════════════════════════════════════════════════════════╗
          ║         STEP 2.5: VALIDATION & INVENTORY GENERATION            ║
          ╚════════════════════════════════════════════════════════════════╝

          ✅ VALIDATION COMPLETE
          ─────────────────────────────────────────────────────────────────
          Expected VMs: {{ expected_vms | length }}
          Online VMs:   {{ online_vms | length }}
          Offline VMs:  {{ offline_vms | length }}

          ✅ INVENTORY GENERATED
          ─────────────────────────────────────────────────────────────────
          Location: inventory/adfr-lab

          Forest Root ({{ lab_design.forest_root.domain_name }}):
          {% for dc in lab_design.forest_root.dcs %}
          - {{ dc.hostname }} → {{ dc.role }}
          {% endfor %}

          {% for domain in lab_design.child_domains %}
          Child Domain ({{ domain.domain_name }}):
          {% for dc in domain.dcs %}
          - {{ dc.hostname }} → {{ dc.role }}
          {% endfor %}

          {% endfor %}

          {% if git_diff.rc != 0 %}
          ✅ GIT OPERATIONS
          ─────────────────────────────────────────────────────────────────
          Committed and pushed to: git@github.com:TechnicallyBob202/ansible.git
          {% else %}
          ℹ️  No git changes (inventory unchanged)
          {% endif %}

          📋 NEXT: CREATE INVENTORY IN SEMAPHORE
          ─────────────────────────────────────────────────────────────────
          1. Go to: Inventory → New Inventory
          2. Name: ADFR Lab
          3. Type: File
          4. Path: inventory/adfr-lab
          5. Save

          Then update Task Templates 3-6 to use "ADFR Lab" inventory

          🚀 READY TO PROCEED WITH DC PROMOTION!
          ════════════════════════════════════════════════════════════════