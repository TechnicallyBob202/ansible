---
# Enhanced Windows Configuration Validation with Detailed DNS Debugging

- name: Test WinRM connectivity
  ansible.windows.win_ping:
  register: ping_test

- name: Get network configuration
  ansible.windows.win_shell: |
    $adapter = Get-NetAdapter | Where-Object {$_.Status -eq "Up"} | Select-Object -First 1
    $ip = Get-NetIPAddress -InterfaceAlias $adapter.Name -AddressFamily IPv4
    $dns = Get-DnsClientServerAddress -InterfaceAlias $adapter.Name -AddressFamily IPv4
    $gateway = Get-NetRoute -InterfaceAlias $adapter.Name -DestinationPrefix "0.0.0.0/0" | Select-Object -First 1

    [PSCustomObject]@{
      Hostname = $env:COMPUTERNAME
      IPAddress = $ip.IPAddress
      Gateway = $gateway.NextHop
      DNS = $dns.ServerAddresses -join ","
      AdapterName = $adapter.Name
    } | ConvertTo-Json
  register: network_info
  changed_when: false

- name: Parse network information
  set_fact:
    network_config: "{{ network_info.stdout | from_json }}"

- name: Display detailed configuration comparison
  debug:
    msg:
      - "====================================================================="
      - "VALIDATION REPORT FOR: {{ inventory_hostname }}"
      - "====================================================================="
      - ""
      - "EXPECTED CONFIGURATION (from Ansible variables):"
      - "  IP Address:    {{ ansible_host }}"
      - "  Hostname:      {{ inventory_hostname }}"
      - "  DNS Primary:   {{ windows_dns_servers[0] | default('NOT DEFINED') }}"
      - "  DNS Secondary: {{ windows_dns_servers[1] | default('NOT DEFINED') }}"
      - "  DNS All:       {{ windows_dns_servers | default([]) | join(', ') }}"
      - "  Gateway:       {{ windows_gateway }}"
      - "  DNS Suffix:    {{ windows_dns_suffix }}"
      - ""
      - "ACTUAL CONFIGURATION (from Windows):"
      - "  IP Address:    {{ network_config.IPAddress }}"
      - "  Hostname:      {{ network_config.Hostname }}"
      - "  DNS Servers:   {{ network_config.DNS }}"
      - "  Gateway:       {{ network_config.Gateway }}"
      - "  Adapter:       {{ network_config.AdapterName }}"
      - ""
      - "VALIDATION RESULTS:"
      - "  IP Match:      {{ '✓ PASS' if network_config.IPAddress == ansible_host else '✗ FAIL' }}"
      - "  Hostname Match: {{ '✓ PASS' if network_config.Hostname == inventory_hostname else '✗ FAIL' }}"
      - "  DNS Match:     {{ '✓ PASS' if windows_dns_servers is defined and windows_dns_servers[0] in network_config.DNS else '✗ FAIL' }}"
      - "  WinRM:         {{ '✓ PASS' if ping_test is succeeded else '✗ FAIL' }}"
      - ""
      - "ANSIBLE VARIABLE DEBUG:"
      - "  windows_dns_servers defined? {{ windows_dns_servers is defined }}"
      - "  windows_dns_servers value: {{ windows_dns_servers | default('UNDEFINED') }}"
      - "  Variable type: {{ windows_dns_servers | type_debug if windows_dns_servers is defined else 'N/A' }}"
      - "  Inventory group(s): {{ group_names | join(', ') }}"
      - "====================================================================="

- name: Validate IP address
  assert:
    that:
      - network_config.IPAddress == ansible_host
    fail_msg: |
      ❌ IP ADDRESS MISMATCH
      Expected: {{ ansible_host }}
      Actual:   {{ network_config.IPAddress }}
    success_msg: "✅ IP address validated: {{ ansible_host }}"

- name: Validate hostname
  assert:
    that:
      - network_config.Hostname == inventory_hostname
    fail_msg: |
      ❌ HOSTNAME MISMATCH
      Expected: {{ inventory_hostname }}
      Actual:   {{ network_config.Hostname }}
    success_msg: "✅ Hostname validated: {{ inventory_hostname }}"

- name: Validate DNS servers are defined
  assert:
    that:
      - windows_dns_servers is defined
      - windows_dns_servers | length > 0
    fail_msg: |
      ❌ DNS SERVERS NOT DEFINED

      The 'windows_dns_servers' variable is not defined for {{ inventory_hostname }}.
      This host is in groups: {{ group_names | join(', ') }}

      Expected group_vars file: inventory/group_vars/{{ group_names[0] if group_names | length > 0 else 'UNKNOWN' }}.yml

      Please ensure the appropriate group_vars file exists with windows_dns_servers defined.
    success_msg: "✅ DNS servers variable is defined"

- name: Validate DNS configuration
  assert:
    that:
      - windows_dns_servers[0] in network_config.DNS
    fail_msg: |
      ❌ DNS CONFIGURATION MISMATCH

      Expected Primary DNS: {{ windows_dns_servers[0] }}
      Expected All DNS:     {{ windows_dns_servers | join(', ') }}
      Actual DNS:           {{ network_config.DNS }}

      Primary DNS server {{ windows_dns_servers[0] }} not found in configured DNS servers.

      To fix, run: ansible-playbook playbooks/02-configure-base-os.yml --limit {{ inventory_hostname }}
    success_msg: "✅ DNS servers validated: {{ network_config.DNS }}"
  when: windows_dns_servers is defined and windows_dns_servers | length > 0

- name: Test DNS resolution
  ansible.windows.win_shell: |
    $results = @()

    try {
      Resolve-DnsName -Name arbor.lab -ErrorAction Stop | Out-Null
      $results += "arbor.lab: OK"
    } catch {
      $results += "arbor.lab: FAILED - $($_.Exception.Message)"
    }

    try {
      Resolve-DnsName -Name alpine.lab -ErrorAction Stop | Out-Null
      $results += "alpine.lab: OK"
    } catch {
      $results += "alpine.lab: FAILED - $($_.Exception.Message)"
    }

    $results | ForEach-Object { Write-Output $_ }
  register: dns_test
  failed_when: false
  changed_when: false

- name: Display DNS resolution test results
  debug:
    msg:
      - "DNS RESOLUTION TESTS:"
      - "{{ dns_test.stdout_lines }}"

- name: Display final validation summary
  debug:
    msg:
      - ""
      - "====================================================================="
      - "FINAL VALIDATION SUMMARY: {{ inventory_hostname }}"
      - "====================================================================="
      - "  WinRM:         {{ '✓ ONLINE' if ping_test is succeeded else '✗ OFFLINE' }}"
      - "  IP Address:    {{ '✓ CORRECT' if network_config.IPAddress == ansible_host else '✗ WRONG (' + network_config.IPAddress + ')' }}"
      - "  Hostname:      {{ '✓ CORRECT' if network_config.Hostname == inventory_hostname else '✗ WRONG (' + network_config.Hostname + ')' }}"
      - "  DNS Config:    {{ '✓ CORRECT' if windows_dns_servers is defined and windows_dns_servers[0] in network_config.DNS else '✗ WRONG' }}"
      - "  DNS Resolution: {{ '✓ WORKING' if dns_test.rc == 0 else '⚠ PARTIAL' }}"
      - "====================================================================="