---
# Stage 04 validation task - call this from playbooks/04-verify-lab.yml
# Self-heals: DCs stay as-is, non-DCs forced to point at DCs

- name: Get network configuration
  ansible.windows.win_shell: |
    $adapter = Get-NetAdapter | Where-Object {$_.Status -eq "Up"} | Select-Object -First 1
    $ip = Get-NetIPAddress -InterfaceAlias $adapter.Name -AddressFamily IPv4
    $dns = Get-DnsClientServerAddress -InterfaceAlias $adapter.Name -AddressFamily IPv4

    [PSCustomObject]@{
      Hostname = $env:COMPUTERNAME
      IPAddress = $ip.IPAddress
      DNS = $dns.ServerAddresses -join ","
    } | ConvertTo-Json
  register: network_info
  changed_when: false

- name: Parse network information
  set_fact:
    network_config: "{{ network_info.stdout | from_json }}"

- name: Check if this is a domain controller
  ansible.windows.win_shell: |
    try {
      Get-ADDomain -ErrorAction Stop | Out-Null
      Write-Output "true"
    } catch {
      Write-Output "false"
    }
  register: dc_check
  changed_when: false
  failed_when: false

- name: Set DC flag
  set_fact:
    is_dc: "{{ 'true' in dc_check.stdout }}"

- name: Fix non-DC DNS to point at DCs (self-healing)
  ansible.windows.win_shell: |
    $adapter = Get-NetAdapter | Where-Object {$_.Status -eq "Up"} | Select-Object -First 1
    Set-DnsClientServerAddress -InterfaceAlias $adapter.Name -ServerAddresses "{{ windows_dns_servers | join('","') }}"
    Clear-DnsClientCache
    Write-Output "DNS set to DCs"
  when:
    - not is_dc
    - "'192.168.35.20' not in network_config.DNS and '192.168.35.30' not in network_config.DNS"
  register: dns_fix

- name: Display Stage 04 validation
  debug:
    msg:
      - "{{ inventory_hostname }} ({{ 'DC' if is_dc else 'Non-DC' }}): IP={{ network_config.IPAddress }}"
      - "  DNS: {{ network_config.DNS if is_dc else ('FIXED to DCs' if dns_fix.changed else network_config.DNS) }}"