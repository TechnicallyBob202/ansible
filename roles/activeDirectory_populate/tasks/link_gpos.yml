---
# Link existing GPOs to appropriate OUs

- name: Get domain DN
  ansible.windows.win_shell: |
    (Get-ADDomain).DistinguishedName
  register: domain_dn_result
  changed_when: false

- name: Set facts
  set_fact:
    domain_dn: "{{ domain_dn_result.stdout | trim }}"
    top_level_ou: "{{ netbios_name }}"

- name: Define GPO to OU mappings
  set_fact:
    gpo_links:
      # Domain-wide policies
      - gpo_name: "Password Policy - Weak"
        ou_path: "OU={{ top_level_ou }},{{ domain_dn }}"
        link_enabled: yes
        enforced: yes

      - gpo_name: "Audit Policy"
        ou_path: "OU={{ top_level_ou }},{{ domain_dn }}"
        link_enabled: yes
        enforced: no

      # User policies
      - gpo_name: "Software Deployment - Office"
        ou_path: "OU=Standard Users,OU=Users,OU={{ top_level_ou }},{{ domain_dn }}"
        link_enabled: yes
        enforced: no

      - gpo_name: "Mapped Drives"
        ou_path: "OU=Standard Users,OU=Users,OU={{ top_level_ou }},{{ domain_dn }}"
        link_enabled: yes
        enforced: no

      # Computer policies
      - gpo_name: "Desktop Lockdown"
        ou_path: "OU=Workstations,OU=Computers,OU={{ top_level_ou }},{{ domain_dn }}"
        link_enabled: yes
        enforced: no

      - gpo_name: "Printer Deployment"
        ou_path: "OU=Workstations,OU=Computers,OU={{ top_level_ou }},{{ domain_dn }}"
        link_enabled: yes
        enforced: no

      - gpo_name: "Screen Saver Policy"
        ou_path: "OU=Workstations,OU=Computers,OU={{ top_level_ou }},{{ domain_dn }}"
        link_enabled: yes
        enforced: no

      - gpo_name: "Firewall Rules"
        ou_path: "OU=Servers,OU=Computers,OU={{ top_level_ou }},{{ domain_dn }}"
        link_enabled: yes
        enforced: no

      - gpo_name: "Windows Update Settings"
        ou_path: "OU=Servers,OU=Computers,OU={{ top_level_ou }},{{ domain_dn }}"
        link_enabled: yes
        enforced: no

- name: Check which GPOs exist
  ansible.windows.win_shell: |
    try {
      Get-GPO -Name "{{ item.gpo_name }}" -ErrorAction Stop | Out-Null
      Write-Output "EXISTS"
    } catch {
      Write-Output "NOT_EXISTS"
    }
  loop: "{{ gpo_links }}"
  register: gpo_checks
  changed_when: false

- name: Link GPOs to OUs
  ansible.windows.win_shell: |
    $gpoName = "{{ item.item.gpo_name }}"
    $ouPath = "{{ item.item.ou_path }}"
    $linkEnabled = ${{ item.item.link_enabled | string | lower }}
    $enforced = ${{ item.item.enforced | string | lower }}

    # Check if link already exists
    $existingLink = Get-GPInheritance -Target $ouPath |
      Select-Object -ExpandProperty GpoLinks |
      Where-Object { $_.DisplayName -eq $gpoName }

    if ($existingLink) {
      Write-Output "ALREADY_LINKED: $gpoName -> $ouPath"
    } else {
      New-GPLink -Name $gpoName -Target $ouPath -LinkEnabled:$linkEnabled -Enforced:$enforced | Out-Null
      Write-Output "LINKED: $gpoName -> $ouPath"
    }
  loop: "{{ gpo_checks.results }}"
  when: "'EXISTS' in item.stdout"
  register: gpo_linking
  loop_control:
    label: "{{ item.item.gpo_name }}"

- name: Display GPO linking summary
  debug:
    msg:
      - "GPO Linking Summary for {{ domain_name }}:"
      - "{% for result in gpo_linking.results %}  {{ result.stdout | trim }}{% endfor %}"

- name: List unlinked GPOs (for realism)
  ansible.windows.win_shell: |
    $allGPOs = Get-GPO -All
    $linkedGPOs = @(
      {% for link in gpo_links %}"{{ link.gpo_name }}"{% if not loop.last %},{% endif %}{% endfor %}
    )

    $unlinked = $allGPOs | Where-Object { $_.DisplayName -notin $linkedGPOs }

    if ($unlinked) {
      Write-Output "Unlinked GPOs (orphaned for realism):"
      $unlinked | ForEach-Object { Write-Output "  - $($_.DisplayName)" }
    } else {
      Write-Output "No unlinked GPOs"
    }
  register: unlinked_gpos
  changed_when: false

- name: Display unlinked GPOs
  debug:
    msg: "{{ unlinked_gpos.stdout_lines }}"