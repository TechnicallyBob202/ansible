---
# Create service accounts with SPNs for Kerberoasting demos

- name: Calculate service account count
  set_fact:
    service_account_count: "{{ ((populate_user_count * populate_service_account_percentage) / 100) | int }}"

- name: Define service account types
  set_fact:
    service_types:
      - name: sql
        spn: "MSSQLSvc/{{ netbios_name }}-SRV-SQL-01.{{ domain_name }}:1433"
        description: "SQL Server service account"
      - name: iis
        spn: "HTTP/{{ netbios_name }}-SRV-WEB-01.{{ domain_name }}"
        description: "IIS application pool account"
      - name: backup
        spn: null
        description: "Backup service account"
      - name: monitoring
        spn: null
        description: "Monitoring service account"
      - name: sccm
        spn: null
        description: "SCCM service account"
      - name: wsus
        spn: null
        description: "WSUS service account"

- name: Create service accounts
  ansible.windows.win_shell: |
    $ErrorActionPreference = "Stop"

    $username = "{{ populate_service_account_prefix }}{{ item.name }}"
    $domain = "{{ domain_name }}"
    $domainDN = "{{ domain_dn }}"
    $description = "{{ item.description }}"
    $spn = "{{ item.spn | default('') }}"

    # Check if exists
    try {
      Get-ADUser -Identity $username -ErrorAction Stop | Out-Null
      Write-Output "EXISTS: $username"
      exit 0
    } catch {}

    $password = ConvertTo-SecureString "{{ ad_safe_mode_password }}" -AsPlainText -Force
    $ouPath = "OU=Service Accounts,OU=Users,$domainDN"

    $userParams = @{
      Name = $username
      SamAccountName = $username
      UserPrincipalName = "$username@$domain"
      DisplayName = $username
      Description = $description
      Path = $ouPath
      AccountPassword = $password
      Enabled = $true
      PasswordNeverExpires = $true
      CannotChangePassword = $true
    }

    New-ADUser @userParams

    # Add SPN if specified (Kerberoasting target)
    if ($spn) {
      Set-ADUser -Identity $username -ServicePrincipalNames @{Add=$spn}
    }

    Write-Output "CREATED: $username"
  loop: "{{ service_types[:service_account_count | int] }}"
  register: svc_creation
  changed_when: "'CREATED' in svc_creation.stdout"
  failed_when: svc_creation.rc != 0 and 'EXISTS' not in svc_creation.stdout

- name: Display service account summary
  debug:
    msg: "Created {{ svc_creation.results | selectattr('changed', 'equalto', true) | list | length }} service accounts"