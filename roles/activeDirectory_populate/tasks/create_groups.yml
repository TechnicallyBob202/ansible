---
# Create realistic groups (security and distribution)

- name: Get domain DN
  ansible.windows.win_shell: |
    (Get-ADDomain).DistinguishedName
  register: domain_dn_result
  changed_when: false

- name: Set domain DN fact
  set_fact:
    domain_dn: "{{ domain_dn_result.stdout | trim }}"

- name: Calculate group distribution
  set_fact:
    security_group_count: "{{ ((populate_group_count | int * populate_security_group_percentage | int) / 100) | int }}"

- name: Calculate distribution group count
  set_fact:
    distribution_group_count: "{{ (populate_group_count | int - security_group_count | int) | int }}"

- name: Calculate security group split
  set_fact:
    dept_security_count: "{{ (security_group_count | int / 2) | int }}"

- name: Calculate access security count
  set_fact:
    access_security_count: "{{ (security_group_count | int - dept_security_count | int) | int }}"

- name: Initialize empty group list
  set_fact:
    groups_to_create: []

- name: Build department security groups list
  set_fact:
    groups_to_create: "{{ groups_to_create + [group_item] }}"
  vars:
    group_item:
      name: "{{ item }}"
      scope: "Global"
      category: "Security"
      ou: "OU=Security Groups,OU=Groups,{{ domain_dn }}"
  loop: "{{ group_names.departments[:dept_security_count | int] }}"

- name: Build access security groups list
  set_fact:
    groups_to_create: "{{ groups_to_create + [group_item] }}"
  vars:
    group_item:
      name: "{{ item }}"
      scope: "DomainLocal"
      category: "Security"
      ou: "OU=Security Groups,OU=Groups,{{ domain_dn }}"
  loop: "{{ group_names.access[:access_security_count | int] }}"

- name: Build distribution groups list
  set_fact:
    groups_to_create: "{{ groups_to_create + [group_item] }}"
  vars:
    group_item:
      name: "{{ item }}"
      scope: "Universal"
      category: "Distribution"
      ou: "OU=Distribution Groups,OU=Groups,{{ domain_dn }}"
  loop: "{{ group_names.distribution[:distribution_group_count | int] }}"

- name: Create groups
  ansible.windows.win_shell: |
    $ErrorActionPreference = "Stop"

    $groupName = "{{ item.name }}"
    $groupScope = "{{ item.scope }}"
    $groupCategory = "{{ item.category }}"
    $ouPath = "{{ item.ou }}"

    # Check if exists
    try {
      Get-ADGroup -Identity $groupName -ErrorAction Stop | Out-Null
      Write-Output "EXISTS: $groupName"
      exit 0
    } catch {}

    New-ADGroup -Name $groupName `
      -SamAccountName $groupName `
      -GroupScope $groupScope `
      -GroupCategory $groupCategory `
      -Path $ouPath `
      -Description "Auto-generated $groupCategory group"

    Write-Output "CREATED: $groupName"
  loop: "{{ groups_to_create }}"
  register: group_creation
  changed_when: "'CREATED' in group_creation.stdout"
  failed_when: group_creation.rc != 0 and 'EXISTS' not in group_creation.stdout
  throttle: 5

- name: Count created groups
  set_fact:
    created_group_count: "{{ group_creation.results | selectattr('changed', 'equalto', true) | list | length }}"

- name: Display group creation summary
  debug:
    msg:
      - "Created {{ created_group_count }} groups"
      - "  Security: {{ security_group_count }}"
      - "  Distribution: {{ distribution_group_count }}"