# roles/semperis_adfr/tasks/stage_adfr_install.yml
---
- name: Create local Semperis directory structure
  ansible.windows.win_file:
    path: "{{ adfr_local_path }}"
    state: directory

- name: Copy ADFR files using Robocopy
  ansible.windows.win_shell: |
    $source = "{{ adfr_smb_source | regex_replace('\\\\\\\\', '\\') }}"
    $dest = "{{ adfr_local_path }}"

    Write-Output "Starting copy from $source to $dest"

    # Robocopy with multi-threaded copy
    robocopy "$source" "$dest" /E /Z /R:3 /W:5 /MT:8 /NFL /NDL /NP

    $exitCode = $LASTEXITCODE

    # Count what we got
    $fileCount = (Get-ChildItem $dest -Recurse -File -ErrorAction SilentlyContinue).Count
    $dirCount = (Get-ChildItem $dest -Recurse -Directory -ErrorAction SilentlyContinue).Count
    $totalSize = [math]::Round(((Get-ChildItem $dest -Recurse -File -ErrorAction SilentlyContinue |
                  Measure-Object -Property Length -Sum).Sum / 1MB), 2)

    Write-Output "Robocopy exit code: $exitCode"
    Write-Output "Files copied: $fileCount"
    Write-Output "Directories: $dirCount"
    Write-Output "Total size: $totalSize MB"

    if ($exitCode -ge 8) {
      throw "Robocopy failed with exit code: $exitCode"
    }

    # Verify key files exist
    $requiredFiles = @(
      "ADFR-5.1.exe",
      "ADFR-OSP-2.1.1.zip",
      "Semperis.PowerShell.Installer.msi"
    )

    $missing = @()
    foreach ($file in $requiredFiles) {
      $path = Join-Path $dest $file
      if (-not (Test-Path $path)) {
        $missing += $file
      }
    }

    if ($missing.Count -gt 0) {
      throw "Missing required files: $($missing -join ', ')"
    }

    Write-Output "All required files verified"
  register: robocopy_result
  failed_when: false

- name: Parse robocopy results
  set_fact:
    copy_stats: "{{ robocopy_result.stdout_lines | select('match', '^(Files copied|Directories|Total size|Robocopy exit code)') | list }}"

- name: Check if robocopy failed
  fail:
    msg: |
      Robocopy failed on {{ inventory_hostname }}
      Exit code indicates failure (>= 8)
      Output: {{ robocopy_result.stdout }}
  when:
    - robocopy_result.rc is defined
    - robocopy_result.rc >= 8

- name: Display copy statistics
  debug:
    msg:
      - "{{ inventory_hostname }} - ADFR staging complete"
      - "Source: {{ adfr_smb_source }}"
      - "Destination: {{ adfr_local_path }}"
      - "{{ copy_stats | join('\n  ') }}"

- name: Verify ADFR executable exists
  ansible.windows.win_stat:
    path: "{{ adfr_local_path }}/ADFR-{{ adfr_version }}.exe"
  register: adfr_exe

- name: Fail if executable not found
  fail:
    msg: "ADFR executable not found at {{ adfr_local_path }}/ADFR-{{ adfr_version }}.exe"
  when: not adfr_exe.stat.exists