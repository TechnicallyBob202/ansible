---
# Create service accounts for ADFR and DSP

- name: Check if service accounts already exist
  ansible.windows.win_shell: |
    try {
      Get-ADUser -Identity "{{ item.name }}" -ErrorAction Stop
      Write-Output "EXISTS"
    } catch {
      Write-Output "NOT_EXISTS"
    }
  loop: "{{ ad_service_accounts }}"
  register: account_check
  changed_when: false

- name: Create service accounts
  ansible.windows.win_shell: |
    $SecurePassword = ConvertTo-SecureString "{{ ad_safe_mode_password }}" -AsPlainText -Force
    New-ADUser -Name "{{ item.item.name }}" `
      -SamAccountName "{{ item.item.name }}" `
      -UserPrincipalName "{{ item.item.name }}@{{ domain_name }}" `
      -Description "{{ item.item.description }}" `
      -AccountPassword $SecurePassword `
      -Enabled $true `
      -PasswordNeverExpires $true `
      -CannotChangePassword $true
  loop: "{{ account_check.results }}"
  when: "'NOT_EXISTS' in item.stdout"
  register: account_creation

- name: Add service accounts to groups
  ansible.windows.win_shell: |
    Add-ADGroupMember -Identity "{{ group }}" -Members "{{ item.item.item.name }}"
  loop: "{{ account_check.results }}"
  loop_control:
    label: "{{ item.item.item.name }}"
  when: "'NOT_EXISTS' in item.stdout"
  with_subelements:
    - "{{ account_check.results }}"
    - item.groups
  vars:
    group: "{{ item.1 }}"

- name: Grant replication permissions
  ansible.windows.win_shell: |
    $domain = Get-ADDomain
    $user = Get-ADUser -Identity "{{ item.item.name }}"
    $acl = Get-Acl -Path "AD:$($domain.DistinguishedName)"

    # Replicating Directory Changes
    $sid = [System.Security.Principal.SecurityIdentifier]$user.SID
    $ace1 = New-Object System.DirectoryServices.ActiveDirectoryAccessRule(
      $sid, "ExtendedRight", "Allow",
      [System.Guid]"1131f6aa-9c07-11d1-f79f-00c04fc2dcd2"
    )

    # Replicating Directory Changes All
    $ace2 = New-Object System.DirectoryServices.ActiveDirectoryAccessRule(
      $sid, "ExtendedRight", "Allow",
      [System.Guid]"1131f6ad-9c07-11d1-f79f-00c04fc2dcd2"
    )

    $acl.AddAccessRule($ace1)
    $acl.AddAccessRule($ace2)
    Set-Acl -Path "AD:$($domain.DistinguishedName)" -AclObject $acl
  loop: "{{ account_check.results }}"
  when: "'NOT_EXISTS' in item.stdout"

- name: Display service account creation result
  debug:
    msg: "Service accounts created for {{ domain_name }}: {{ ad_service_accounts | map(attribute='name') | join(', ') }}"