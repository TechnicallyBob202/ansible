---
# Create Group Policy Objects (GPOs)

- name: Get domain DN
  ansible.windows.win_shell: |
    (Get-ADDomain).DistinguishedName
  register: domain_dn_result
  changed_when: false

- name: Set domain facts
  set_fact:
    domain_dn: "{{ domain_dn_result.stdout | trim }}"
    top_level_ou_name: "{{ netbios_name }}"

- name: Define GPO list
  set_fact:
    gpos_to_create:
      - name: "Password Policy - Weak"
        comment: "Weak password policy for testing/demos"
      - name: "Desktop Lockdown"
        comment: "Desktop lockdown settings for workstations"
      - name: "Software Deployment - Office"
        comment: "Microsoft Office deployment"
      - name: "Printer Deployment"
        comment: "Network printer deployment"
      - name: "Mapped Drives"
        comment: "Network drive mappings"
      - name: "Firewall Rules"
        comment: "Windows Firewall rules for servers"
      - name: "Windows Update Settings"
        comment: "Windows Update configuration with automatic overnight reboots"
      - name: "Screen Saver Policy"
        comment: "Screen saver lock settings"
      - name: "Audit Policy"
        comment: "Audit and logging policy"
      - name: "Orphaned GPO 1"
        comment: "Unlinked GPO for realism"
      - name: "Orphaned GPO 2"
        comment: "Another unlinked GPO"

- name: Check if GPOs already exist
  ansible.windows.win_shell: |
    try {
      Get-GPO -Name "{{ item.name }}" -ErrorAction Stop | Out-Null
      Write-Output "EXISTS"
    } catch [System.ArgumentException] {
      Write-Output "NOT_EXISTS"
    } catch {
      Write-Output "ERROR: $($_.Exception.Message)"
    }
  loop: "{{ gpos_to_create }}"
  register: gpo_check
  failed_when: "'ERROR:' in gpo_check.stdout"
  changed_when: false

- name: Create only missing GPOs
  ansible.windows.win_shell: |
    $ErrorActionPreference = "Stop"
    try {
      $null = New-GPO -Name "{{ item.item.name }}" -Comment "{{ item.item.comment }}"
      Write-Output "CREATED: {{ item.item.name }}"
    } catch {
      Write-Output "ERROR: $($_.Exception.Message)"
    }
  loop: "{{ gpo_check.results }}"
  when: "'NOT_EXISTS' in item.stdout"
  register: gpo_creation
  changed_when: "'CREATED:' in gpo_creation.stdout"
  failed_when: "'ERROR:' in gpo_creation.stdout"

# =============================================================================
# Configure Windows Update Settings GPO with Real Policies
# =============================================================================
- name: Check if Windows Update GPO exists
  ansible.windows.win_shell: |
    try {
      Get-GPO -Name "Windows Update Settings" -ErrorAction Stop | Out-Null
      Write-Output "EXISTS"
    } catch {
      Write-Output "NOT_EXISTS"
    }
  register: wu_gpo_check
  changed_when: false

- name: Configure Windows Update Settings GPO
  ansible.windows.win_shell: |
    $ErrorActionPreference = "Stop"
    $gpoName = "Windows Update Settings"

    try {
      # Verify GPO exists
      $gpo = Get-GPO -Name $gpoName -ErrorAction Stop

      # Registry key paths for Windows Update policies
      $wuKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"
      $auKeyPath = "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU"

      # Configure Automatic Updates
      # Option 4 = Auto download and schedule install
      Set-GPRegistryValue -Name $gpoName -Key $auKeyPath -ValueName "NoAutoUpdate" -Type DWord -Value 0 | Out-Null
      Set-GPRegistryValue -Name $gpoName -Key $auKeyPath -ValueName "AUOptions" -Type DWord -Value 4 | Out-Null

      # Schedule installation for 3 AM (overnight)
      Set-GPRegistryValue -Name $gpoName -Key $auKeyPath -ValueName "ScheduledInstallDay" -Type DWord -Value 0 | Out-Null  # 0 = Every day
      Set-GPRegistryValue -Name $gpoName -Key $auKeyPath -ValueName "ScheduledInstallTime" -Type DWord -Value 3 | Out-Null  # 3 AM

      # Enable automatic reboot after installation
      Set-GPRegistryValue -Name $gpoName -Key $auKeyPath -ValueName "NoAutoRebootWithLoggedOnUsers" -Type DWord -Value 0 | Out-Null

      # Set reboot warning times (15 minutes warning)
      Set-GPRegistryValue -Name $gpoName -Key $auKeyPath -ValueName "RebootWarningTimeout" -Type DWord -Value 15 | Out-Null
      Set-GPRegistryValue -Name $gpoName -Key $auKeyPath -ValueName "RebootRelaunchTimeout" -Type DWord -Value 10 | Out-Null

      # Configure to use Windows Update (not WSUS)
      Set-GPRegistryValue -Name $gpoName -Key $wuKeyPath -ValueName "DoNotConnectToWindowsUpdateInternetLocations" -Type DWord -Value 0 | Out-Null

      # Allow driver updates through Windows Update
      Set-GPRegistryValue -Name $gpoName -Key $wuKeyPath -ValueName "ExcludeWUDriversInQualityUpdate" -Type DWord -Value 0 | Out-Null

      # Enable recommended updates
      Set-GPRegistryValue -Name $gpoName -Key $auKeyPath -ValueName "IncludeRecommendedUpdates" -Type DWord -Value 1 | Out-Null

      Write-Output "CONFIGURED: Windows Update Settings GPO"
      Write-Output "  • Automatic updates enabled"
      Write-Output "  • Scheduled for 3 AM daily"
      Write-Output "  • Automatic reboot enabled (even with logged on users)"
      Write-Output "  • 15 minute reboot warning"
      Write-Output "  • Driver updates enabled"
      Write-Output "  • Recommended updates enabled"
    } catch {
      Write-Output "ERROR: $($_.Exception.Message)"
      exit 1
    }
  when: "'EXISTS' in wu_gpo_check.stdout"
  register: gpo_config
  changed_when: "'CONFIGURED:' in gpo_config.stdout"
  failed_when: "'ERROR:' in gpo_config.stdout"

- name: Display Windows Update GPO configuration
  debug:
    msg: "{{ gpo_config.stdout_lines }}"
  when: gpo_config.changed

# =============================================================================
# Summary
# =============================================================================
- name: Count created and existing GPOs
  set_fact:
    created_gpos: "{{ gpo_creation.results | selectattr('changed', 'equalto', true) | list | length | default(0) }}"
    existing_gpos: "{{ gpo_check.results | selectattr('stdout', 'search', 'EXISTS') | list | length | default(0) }}"

- name: Display GPO creation summary
  debug:
    msg:
      - "GPO Creation Summary for {{ domain_name }}:"
      - "  Created: {{ created_gpos }}"
      - "  Already existed: {{ existing_gpos }}"
      - "  Total (tracked): {{ gpos_to_create | length }}"
      - ""
      - "Configured GPOs:"
      - "  • Windows Update Settings - Automatic updates at 3 AM with auto-reboot"