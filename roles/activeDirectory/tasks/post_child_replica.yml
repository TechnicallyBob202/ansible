---
# Always-run healing for child replicas: ensure DNS = [self, child PDC, alpine root PDC]

- name: Resolve key IPs (once)
  set_fact:
    alpine_root_pdc_ip: "{{ hostvars[groups['alpine_forest_root_pdc'][0]].ansible_host }}"
    mauna_pdc_ip: "{{ hostvars[groups['mauna_child_pdc'][0]].ansible_host if (groups['mauna_child_pdc'] | default([]) | length) > 0 else omit }}"
    rainier_pdc_ip: "{{ hostvars[groups['rainier_child_pdc'][0]].ansible_host if (groups['rainier_child_pdc'] | default([]) | length) > 0 else omit }}"
  run_once: yes

- name: Set DNS for child replicas (post)
  set_fact:
    windows_dns_servers: >-
      {{
        [ ansible_host ]
        + (
            [ mauna_pdc_ip ]
            if (inventory_hostname in (groups['mauna_child_replica'] | default([])))
            else [ rainier_pdc_ip ]
          )
        + [ alpine_root_pdc_ip ]
      }}
  when: >
    inventory_hostname in (groups['mauna_child_replica'] | default([]))
    or
    inventory_hostname in (groups['rainier_child_replica'] | default([]))

- name: Apply DNS (post)
  include_role:
    name: windows
    tasks_from: set_dns.yml
  when: windows_dns_servers is defined