---
# Create security and distribution groups from group_names

- name: Get domain DN
  ansible.windows.win_shell: |
    (Get-ADDomain).DistinguishedName
  register: domain_dn_result
  changed_when: false

- name: Set domain facts
  set_fact:
    domain_dn: "{{ domain_dn_result.stdout | trim }}"
    top_level_ou_name: "{{ netbios_name }}"
    security_groups_ou: "OU=Security Groups,OU=Groups,OU={{ netbios_name }},{{ domain_dn_result.stdout | trim }}"
    distribution_groups_ou: "OU=Distribution Groups,OU=Groups,OU={{ netbios_name }},{{ domain_dn_result.stdout | trim }}"

- name: Debug - Show group_names variable
  debug:
    var: group_names

# Build security and distribution lists from group_names in role defaults
- name: Build security group list from categories
  set_fact:
    security_groups: >-
      {{
        (group_names.departments | default([])) +
        (group_names.access | default([])) +
        (group_names.applications | default([])) +
        (group_names.legacy | default([]))
      }}

- name: Build distribution group list from categories
  set_fact:
    distribution_groups: "{{ group_names.distribution | default([]) }}"

- name: Debug - Show security groups to create
  debug:
    msg: "Security groups ({{ security_groups | length }}): {{ security_groups | join(', ') }}"

- name: Debug - Show distribution groups to create
  debug:
    msg: "Distribution groups ({{ distribution_groups | length }}): {{ distribution_groups | join(', ') }}"

- name: Verify Security Groups OU exists
  ansible.windows.win_shell: |
    try {
      Get-ADOrganizationalUnit -Identity "{{ security_groups_ou }}" -ErrorAction Stop | Out-Null
      Write-Output "EXISTS"
    } catch {
      Write-Output "NOT_EXISTS: {{ security_groups_ou }}"
    }
  register: security_ou_check
  changed_when: false

- name: Debug - Security Groups OU check
  debug:
    var: security_ou_check.stdout

- name: Verify Distribution Groups OU exists
  ansible.windows.win_shell: |
    try {
      Get-ADOrganizationalUnit -Identity "{{ distribution_groups_ou }}" -ErrorAction Stop | Out-Null
      Write-Output "EXISTS"
    } catch {
      Write-Output "NOT_EXISTS: {{ distribution_groups_ou }}"
    }
  register: distribution_ou_check
  changed_when: false

- name: Debug - Distribution Groups OU check
  debug:
    var: distribution_ou_check.stdout

# Create security groups
- name: Create security groups
  ansible.windows.win_shell: |
    $ErrorActionPreference = "Stop"
    $groupName = "{{ item }}"
    $ouPath = "{{ security_groups_ou }}"
    try {
      Get-ADGroup -Identity $groupName -ErrorAction Stop | Out-Null
      Write-Output "EXISTS: $groupName"
    } catch {
      try {
        New-ADGroup -Name $groupName `
          -GroupScope Global `
          -GroupCategory Security `
          -Description "$groupName" `
          -Path $ouPath `
          -ErrorAction Stop | Out-Null
        Write-Output "CREATED: $groupName"
      } catch {
        Write-Output "ERROR: $groupName - $($_.Exception.Message)"
      }
    }
  loop: "{{ security_groups }}"
  register: security_group_creation
  changed_when: "'CREATED:' in (security_group_creation.stdout | default(''))"

- name: Debug - Security group creation results
  debug:
    msg: "{{ item.item }}: {{ item.stdout | trim }}"
  loop: "{{ security_group_creation.results }}"
  loop_control:
    label: "{{ item.item }}"

# Create distribution groups
- name: Create distribution groups
  ansible.windows.win_shell: |
    $ErrorActionPreference = "Stop"
    $groupName = "{{ item }}"
    $ouPath = "{{ distribution_groups_ou }}"
    try {
      Get-ADGroup -Identity $groupName -ErrorAction Stop | Out-Null
      Write-Output "EXISTS: $groupName"
    } catch {
      try {
        New-ADGroup -Name $groupName `
          -GroupScope Universal `
          -GroupCategory Distribution `
          -Description "$groupName" `
          -Path $ouPath `
          -ErrorAction Stop | Out-Null
        Write-Output "CREATED: $groupName"
      } catch {
        Write-Output "ERROR: $groupName - $($_.Exception.Message)"
      }
    }
  loop: "{{ distribution_groups }}"
  register: distribution_group_creation
  changed_when: "'CREATED:' in (distribution_group_creation.stdout | default(''))"

- name: Debug - Distribution group creation results
  debug:
    msg: "{{ item.item }}: {{ item.stdout | trim }}"
  loop: "{{ distribution_group_creation.results }}"
  loop_control:
    label: "{{ item.item }}"

- name: Count created groups
  set_fact:
    security_created: "{{ security_group_creation.results | selectattr('changed','equalto',true) | list | length | default(0) }}"
    distribution_created: "{{ distribution_group_creation.results | selectattr('changed','equalto',true) | list | length | default(0) }}"

- name: Display group creation summary
  debug:
    msg:
      - "Groups created for {{ domain_name }}:"
      - "  Security Groups: {{ security_created }}/{{ security_groups | length }}"
      - "  Distribution Groups: {{ distribution_created }}/{{ distribution_groups | length }}"
      - "  Total: {{ (security_created | int) + (distribution_created | int) }}"