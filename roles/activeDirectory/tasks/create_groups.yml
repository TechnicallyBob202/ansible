---
# Create security and distribution groups from ad_groups

- name: Get domain DN
  ansible.windows.win_shell: |
    (Get-ADDomain).DistinguishedName
  register: domain_dn_result
  changed_when: false

- name: Set domain facts
  set_fact:
    domain_dn: "{{ domain_dn_result.stdout | trim }}"
    top_level_ou_name: "{{ netbios_name }}"
    security_groups_ou: "OU=Security Groups,OU=Groups,OU={{ netbios_name }},{{ domain_dn_result.stdout | trim }}"
    distribution_groups_ou: "OU=Distribution Groups,OU=Groups,OU={{ netbios_name }},{{ domain_dn_result.stdout | trim }}"

# Build security and distribution lists from ad_groups in role defaults
- name: Build security group list from categories
  set_fact:
    security_groups: >-
      {{
        (ad_groups.departments | default([])) +
        (ad_groups.access | default([])) +
        (ad_groups.applications | default([])) +
        (ad_groups.legacy | default([]))
      }}

- name: Build distribution group list from categories
  set_fact:
    distribution_groups: "{{ ad_groups.distribution | default([]) }}"

# Create security groups
- name: Create security groups
  ansible.windows.win_shell: |
    $ErrorActionPreference = "Stop"
    $groupName = "{{ item }}"
    $ouPath = "{{ security_groups_ou }}"
    try {
      Get-ADGroup -Identity $groupName -ErrorAction Stop | Out-Null
      Write-Output "EXISTS"
    } catch {
      New-ADGroup -Name $groupName `
        -GroupScope Global `
        -GroupCategory Security `
        -Description "$groupName" `
        -Path $ouPath `
        -ErrorAction Stop | Out-Null
      Write-Output "CREATED"
    }
  loop: "{{ security_groups }}"
  register: security_group_creation
  changed_when: "'CREATED' in (security_group_creation.stdout | default(''))"

# Create distribution groups
- name: Create distribution groups
  ansible.windows.win_shell: |
    $ErrorActionPreference = "Stop"
    $groupName = "{{ item }}"
    $ouPath = "{{ distribution_groups_ou }}"
    try {
      Get-ADGroup -Identity $groupName -ErrorAction Stop | Out-Null
      Write-Output "EXISTS"
    } catch {
      New-ADGroup -Name $groupName `
        -GroupScope Universal `
        -GroupCategory Distribution `
        -Description "$groupName" `
        -Path $ouPath `
        -ErrorAction Stop | Out-Null
      Write-Output "CREATED"
    }
  loop: "{{ distribution_groups }}"
  register: distribution_group_creation
  changed_when: "'CREATED' in (distribution_group_creation.stdout | default(''))"

- name: Count created groups
  set_fact:
    security_created: "{{ security_group_creation.results | selectattr('changed','equalto',true) | list | length | default(0) }}"
    distribution_created: "{{ distribution_group_creation.results | selectattr('changed','equalto',true) | list | length | default(0) }}"

- name: Display group creation summary
  debug:
    msg:
      - "Groups created for {{ domain_name }}:"
      - "  Security Groups: {{ security_created }}/{{ security_groups | length }}"
      - "  Distribution Groups: {{ distribution_created }}/{{ distribution_groups | length }}"
      - "  Total: {{ (security_created | int) + (distribution_created | int) }}"