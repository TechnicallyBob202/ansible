---
# Build lab_design from inventory
- name: Seed lists
  set_fact:
    infrastructure_list: []
    arbor_list: []
    alpine_list: []
    recovery_list: []

- name: Collect Infrastructure VMs
  set_fact:
    infrastructure_list: >-
      {{ infrastructure_list + [
          { 'hostname': item,
            'ip': (hostvars[item].ansible_host | default(item)),
            'role': (hostvars[item].role | default('')),
            'domain': '' }
        ] }}
  loop: "{{ groups['infrastructure'] | default([]) }}"

- name: Collect Arbor Forest root DCs
  set_fact:
    arbor_list: >-
      {{ arbor_list + [
          { 'hostname': item,
            'ip': (hostvars[item].ansible_host | default(item)),
            'role': (hostvars[item].role | default('')),
            'domain': 'arbor.lab' }
        ] }}
  loop: >-
    {{
      (groups['arbor_forest_root_pdc'] | default([]))
      + (groups['arbor_forest_root_replica'] | default([]))
    }}

- name: Collect Alpine Forest root DCs
  set_fact:
    alpine_list: >-
      {{ alpine_list + [
          { 'hostname': item,
            'ip': (hostvars[item].ansible_host | default(item)),
            'role': (hostvars[item].role | default('')),
            'domain': 'alpine.lab' }
        ] }}
  loop: >-
    {{
      (groups['alpine_forest_root_pdc'] | default([]))
      + (groups['alpine_forest_root_replica'] | default([]))
    }}

- name: Collect MAUNA child DCs
  set_fact:
    alpine_list: >-
      {{ alpine_list + [
          { 'hostname': item,
            'ip': (hostvars[item].ansible_host | default(item)),
            'role': (hostvars[item].role | default('')),
            'domain': 'mauna.alpine.lab' }
        ] }}
  loop: >-
    {{
      (groups['mauna_child_pdc'] | default([]))
      + (groups['mauna_child_replica'] | default([]))
    }}

- name: Collect RAINIER child DCs
  set_fact:
    alpine_list: >-
      {{ alpine_list + [
          { 'hostname': item,
            'ip': (hostvars[item].ansible_host | default(item)),
            'role': (hostvars[item].role | default('')),
            'domain': 'rainier.alpine.lab' }
        ] }}
  loop: >-
    {{
      (groups['rainier_child_pdc'] | default([]))
      + (groups['rainier_child_replica'] | default([]))
    }}

- name: Collect Recovery VMs
  set_fact:
    recovery_list: >-
      {{ recovery_list + [
          { 'hostname': item,
            'ip': (hostvars[item].ansible_host | default(item)),
            'role': (hostvars[item].role | default('')),
            'domain': '' }
        ] }}
  loop: "{{ groups['recovery_vms'] | default([]) }}"

- name: Build lab_design dict
  set_fact:
    lab_design:
      infrastructure: "{{ infrastructure_list | sort(attribute='hostname') }}"
      arbor_forest:   "{{ arbor_list | sort(attribute='hostname') }}"
      alpine_forest:  "{{ alpine_list | sort(attribute='hostname') }}"
      recovery_vms:   "{{ recovery_list | sort(attribute='hostname') }}"

# Render the XML via template
- name: Generate mRemoteNG config (template)
  template:
    src: "{{ playbook_dir }}/../templates/mremoteng.xml.j2"
    dest: "{{ playbook_dir }}/../files/adfr-lab-mremoteng.xml"
    mode: '0644'

# Optional: Add/commit/push if git repo exists
- name: Check if git repository exists
  stat:
    path: "{{ playbook_dir }}/../.git"
  register: git_repo

- name: Add mRemoteNG file to git
  shell: |
    cd {{ playbook_dir }}/..
    git add files/adfr-lab-mremoteng.xml
  when: git_repo.stat.exists

- name: Commit mRemoteNG file
  shell: |
    cd {{ playbook_dir }}/..
    git config user.email "ansible@semperis.lab" || true
    git config user.name "Ansible Automation" || true
    git commit -m "Update mRemoteNG configuration - {{ ansible_date_time.iso8601 }}" files/adfr-lab-mremoteng.xml || echo "No changes to commit"
  when: git_repo.stat.exists
  register: git_commit
  changed_when: "'No changes to commit' not in git_commit.stdout"

- name: Push to git
  shell: |
    cd {{ playbook_dir }}/..
    git push origin main || git push origin master || echo "Push failed - check remote configuration"
  when:
    - git_repo.stat.exists
    - git_commit.changed
  register: git_push
  ignore_errors: yes

- name: Display git status
  debug:
    msg:
      - "mRemoteNG file generated: files/adfr-lab-mremoteng.xml"
      - "Git commit: {{ 'Updated' if git_commit.changed else 'No changes' }}"
      - "Git push: {{ 'Success' if git_push is succeeded else 'Failed or skipped' }}"